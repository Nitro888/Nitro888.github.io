{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/ERC721Mintable.sol","webpack:///./src/blockchain/openzeppelin-solidity/introspection/ERC165.sol","webpack:///./src/blockchain/daoAuth.js","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/ERC721Enumerable.sol","webpack:///./src/blockchain/openzeppelin-solidity/drafts/Counters.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/IERC721Enumerable.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/IERC721.sol","webpack:///./src/plugins/vuetify.js","webpack:///./src/App.vue?50a9","webpack:///./src/views/Home.vue?2d33","webpack:///./src/components/ERC20Factory.vue?8359","webpack:///src/components/ERC20Factory.vue","webpack:///./src/components/ERC20Factory.vue?bb2b","webpack:///./src/components/ERC20Factory.vue","webpack:///./src/components/ERC721Factory.vue?177b","webpack:///src/components/ERC721Factory.vue","webpack:///./src/components/ERC721Factory.vue?e436","webpack:///./src/components/ERC721Factory.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?cc46","webpack:///./src/views/Home.vue","webpack:///./src/document/ko.js","webpack:///./src/document/en.js","webpack:///src/App.vue","webpack:///./src/App.vue?897e","webpack:///./src/App.vue","webpack:///./src/views/About.vue?00ae","webpack:///./src/views/About.vue","webpack:///./src/router.js","webpack:///./src/store.js","webpack:///./src/registerServiceWorker.js","webpack:///./src/blockchain/ethereum.js","webpack:///./src/main.js","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/IERC721Receiver.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC20/ERC20.sol","webpack:///./src/views/Home.vue?f1a7","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC20/IERC20.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/IERC721Metadata.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC20/ERC20Detailed.sol","webpack:///./src/blockchain/openzeppelin-solidity/math/SafeMath.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC20/ERC20Burnable.sol","webpack:///./src/blockchain/openzeppelin-solidity/access/roles/MinterRole.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/ERC721.sol","webpack:///./src/App.vue?468d","webpack:///./src/blockchain/openzeppelin-solidity/access/Roles.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/ERC721Metadata.sol","webpack:///./src/blockchain/openzeppelin-solidity/utils/Address.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC721/ERC721Burnable.sol","webpack:///./src/blockchain/openzeppelin-solidity/introspection/IERC165.sol","webpack:///./src/blockchain/openzeppelin-solidity/token/ERC20/ERC20Mintable.sol"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","address","abi","constant","inputs","outputs","type","payable","stateMutability","anonymous","indexed","Vue","use","Vuetify","iconfont","Appvue_type_template_id_220a5264_scoped_true_render","_vm","this","_h","$createElement","_c","_self","attrs","dark","flat","staticClass","domProps","innerHTML","_s","title","icon","href","target","_v","offset-y","scopedSlots","_u","fn","ref","on","_g","select","_l","item","click","$event","change","height","footer","contents","staticRenderFns","Homevue_type_template_id_2f9d86b6_scoped_true_render","index","content","row","wrap","md4","member","issuers","accounts","md8","proxy","lazy-validation","model","callback","$$v","valid","expression","label","rules","isAddress","$set","min","loading","readonly","createIssuer","add","addProxy","remove","removeProxy","lg4","lg8","createErc20","createErc721","Homevue_type_template_id_2f9d86b6_scoped_true_staticRenderFns","ERC20Factoryvue_type_template_id_4f701e4e_render","xs6","mandatory","token","ERC20Factoryvue_type_template_id_4f701e4e_staticRenderFns","solc","wrapper","Module","sources","ERC20","math/SafeMath.sol","SafeMath_default","a","IERC20.sol","IERC20_default","ERC20Detailed.sol","ERC20Detailed_default","ERC20.sol","ERC20_default","Deploy","ERC20Burnable","ERC20Burnable.sol","ERC20Burnable_default","ERC20Mintable","access/Roles.sol","Roles_default","access/roles/MinterRole.sol","MinterRole_default","ERC20Mintable.sol","ERC20Mintable_default","ERC20Factoryvue_type_script_lang_js_","symbol","byteCode","initialSupply","methods","_select","asyncToGenerator","regeneratorRuntime","mark","_callee","_context","prev","next","stop","_x","arguments","customize","base","temp","concat","compile","myCustomContract","language","settings","optimizer","enabled","runs","outputSelection","*","output","JSON","parse","stringify_default","contracts","evm","bytecode","option","components_ERC20Factoryvue_type_script_lang_js_","component","componentNormalizer","ERC20Factory","installComponents_default","VCard","VFlex","VLayout","VRadio","VRadioGroup","VTextField","ERC721Factoryvue_type_template_id_038e2cf8_render","ERC721Factoryvue_type_template_id_038e2cf8_staticRenderFns","ERC721Factoryvue_type_script_lang_js_wrapper","ERC721Factoryvue_type_script_lang_js_solc","ERC721Factoryvue_type_script_lang_js_sources","ERC721","IERC721.sol","IERC721_default","IERC721Receiver.sol","IERC721Receiver_default","IERC721Enumerable.sol","IERC721Enumerable_default","IERC721Metadata.sol","IERC721Metadata_default","utils/Address.sol","Address_default","drafts/Counters.sol","Counters_default","introspection/IERC165.sol","IERC165_default","introspection/ERC165.sol","ERC165_default","ERC721.sol","ERC721_default","ERC721Enumerable.sol","ERC721Enumerable_default","ERC721Metadata.sol","ERC721Metadata_default","ERC721Burnable","ERC721Burnable.sol","ERC721Burnable_default","ERC721Mintable","ERC721Mintable.sol","ERC721Mintable_default","ERC721Factoryvue_type_script_lang_js_","components_ERC721Factoryvue_type_script_lang_js_","ERC721Factory_component","ERC721Factory","Homevue_type_script_lang_js_","components","props","enable","master","payment","verify","uid","account","proxyKey","wallet","v","mounted","_this","web3","eth","to","daoAuth","encodeABI","err","decodeParameters","utils","toBN","toString","sendTransaction","from","console","log","$refs","formCreate","validate","keccak256","formAdd","proxyAdd","formRemove","proxyRemove","deploy","Contract","erc20","erc721","views_Homevue_type_script_lang_js_","Home_component","Home","VBtn","VContainer","VDivider","VExpansionPanel","VExpansionPanelContent","VForm","VSpacer","VGrid","ko","en","Appvue_type_script_lang_js_","items","KO","document_ko","EN","document_en","src_Appvue_type_script_lang_js_","App_component","App","VApp","VCardActions","components_VCard","VContent","VFooter","VIcon","VList","VListTile","VListTileTitle","components_VList","VMenu","VToolbar","VToolbarTitle","components_VToolbar","Aboutvue_type_template_id_1fa047fe_render","Aboutvue_type_template_id_1fa047fe_staticRenderFns","script","About_component","About","Router","router","process","routes","path","Vuex","store","Store","state","mutations","actions","register","ready","registered","cached","updatefound","updated","offline","error","Web3","require","givenProvider","jsonInterface","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_2f9d86b6_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_2f9d86b6_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_220a5264_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_220a5264_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAGAe,KAAAhB,GAEA,MAAAO,EAAAC,OACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,IAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,qBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,YAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,IAEA,IAAAC,EAAAC,OAAA,gBAAAA,OAAA,oBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,qBAEAU,mECtJAY,EAAAD,QAAA,ioBCAAC,EAAAD,QAAA,msCCAAC,EAAOD,QAAU,CACf+B,QAAW,6CACXC,IAAO,CACL,CACEC,UAAY,EACZC,OAAU,GACV5B,KAAQ,QACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,YAGZC,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,cAEV,CACE9B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,SACR6B,QAAW,GACXE,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,cAEV,CACE9B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,QACR6B,QAAW,GACXE,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,SACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,WAEV,CACE9B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,WACR6B,QAAW,GACXE,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,WAEV,CACE9B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,cACR6B,QAAW,GACXE,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,QACR8B,KAAQ,WAEV,CACE9B,KAAQ,WACR8B,KAAQ,UAGZ9B,KAAQ,WACR6B,QAAW,GACXE,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,gBACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,eACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,aACnBF,KAAQ,YAEV,CACEG,WAAa,EACbL,OAAU,CACR,CACEM,SAAW,EACXlC,KAAQ,QACR8B,KAAQ,WAEV,CACEI,SAAW,EACXlC,KAAQ,UACR8B,KAAQ,WAEV,CACEI,SAAW,EACXlC,KAAQ,WACR8B,KAAQ,UAGZ9B,KAAQ,OACR8B,KAAQ,SAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,eACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,YAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,GACV5B,KAAQ,WACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,eAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,WACR8B,KAAQ,YAGZ9B,KAAQ,YACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,YAGZ9B,KAAQ,WACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,WAEV,CACE9B,KAAQ,WACR8B,KAAQ,YAGZ9B,KAAQ,WACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,WACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,WACR8B,KAAQ,WAEV,CACE9B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,YACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,UACR8B,KAAQ,WAEV,CACE9B,KAAQ,SACR8B,KAAQ,YAGZ9B,KAAQ,UACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,CACR,CACE5B,KAAQ,WACR8B,KAAQ,WAEV,CACE9B,KAAQ,OACR8B,KAAQ,YAGZ9B,KAAQ,WACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,SAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,YAEV,CACEH,UAAY,EACZC,OAAU,GACV5B,KAAQ,UACR6B,QAAW,CACT,CACE7B,KAAQ,GACR8B,KAAQ,YAGZC,SAAW,EACXC,gBAAmB,OACnBF,KAAQ,6DC5XdnC,EAAAD,QAAA,wkRCAAC,EAAAD,QAAA,68CCAAC,EAAAD,QAAA,qfCAAC,EAAAD,QAAA,k1CCIAyC,OAAIC,IAAIC,OAAS,CACfC,SAAU,OCLZ,IAAIC,EAAM,WAAgB,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAmBE,MAAA,CAAOC,KAAA,KAAW,CAAAH,EAAA,aAAkBE,MAAA,CAAOrD,IAAA,GAAAuD,KAAA,KAAoB,CAAAJ,EAAA,mBAAwBK,YAAA,0BAAAC,SAAA,CAAgDC,UAAAX,EAAAY,GAAAZ,EAAAa,UAA+BT,EAAA,YAAAA,EAAA,SAA6BE,MAAA,CAAOE,KAAA,GAAAM,KAAA,GAAAC,KAAA,sCAAAC,OAAA,WAAoF,CAAAZ,EAAA,UAAAJ,EAAAiB,GAAA,uBAAAb,EAAA,UAA0DE,MAAA,CAAOY,WAAA,IAAcC,YAAAnB,EAAAoB,GAAA,EAAsB7C,IAAA,YAAA8C,GAAA,SAAAC,GAC/e,IAAAC,EAAAD,EAAAC,GACA,OAAAnB,EAAA,QAAAJ,EAAAwB,GAAA,CAA2BlB,MAAA,CAAOE,KAAA,GAAAM,KAAA,KAAqBS,GAAA,CAAAvB,EAAAiB,GAAA,eAAAjB,EAAAY,GAAAZ,EAAAyB,QAAA,sBAAoE,CAAArB,EAAA,SAAAJ,EAAA0B,GAAA1B,EAAA,eAAA2B,EAAApD,GAAoD,OAAA6B,EAAA,eAAyB7B,MAAAgD,GAAA,CAAYK,MAAA,SAAAC,GAAyB,OAAA7B,EAAA8B,OAAAvD,MAAyB,CAAA6B,EAAA,qBAAAJ,EAAAiB,GAAAjB,EAAAY,GAAArC,OAAA,KAAoD,WAAA6B,EAAA,YAA4BE,MAAA,CAAOrD,IAAA,GAAA8E,OAAA,SAA0B,CAAA3B,EAAA,UAAeK,YAAA,mBAAAH,MAAA,CAAsCE,KAAA,KAAW,CAAAJ,EAAA,kBAAuBK,YAAA,iBAAAC,SAAA,CAAuCC,UAAAX,EAAAY,GAAAZ,EAAAgC,YAAgC,OAAA5B,EAAA,aAAAA,EAAA,QAAqCE,MAAA,CAAO2B,SAAAjC,EAAAiC,aAAyB,QAC1lBC,EAAA,GCHIC,EAAM,WAAgB,IAAAnC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,eAAAJ,EAAA0B,GAAA1B,EAAA,kBAAA2B,EAAAS,GAAoE,OAAAhC,EAAA,OAAiB7B,IAAA6D,GAAU,CAAAhC,EAAA,MAAWK,YAAA,+DAAAC,SAAA,CAAqFC,UAAAX,EAAAY,GAAAe,EAAAd,UAAgCT,EAAA,eAAoBK,YAAA,8CAAAC,SAAA,CAAoEC,UAAAX,EAAAY,GAAAe,EAAAU,aAAkC,KAAMjC,EAAA,aAAkBK,YAAA,cAAwBL,EAAA,YAAiBE,MAAA,CAAOgC,IAAA,GAAAC,KAAA,KAAoB,CAAAnC,EAAA,UAAeE,MAAA,CAAOkC,IAAA,KAAU,CAAApC,EAAA,OAAYK,YAAA,YAAuB,CAAAT,EAAAiB,GAAA,oBAAAb,EAAA,OAAuCK,YAAA,mBAA8B,CAAAT,EAAAiB,GAAAjB,EAAAY,GAAAZ,EAAAyC,OAAAC,SAAA,IAAA1C,EAAAY,GAAAZ,EAAAyC,OAAAE,eAAAvC,EAAA,UAAsFE,MAAA,CAAOsC,IAAA,KAAU,CAAAxC,EAAA,qBAAAA,EAAA,6BAA0De,YAAAnB,EAAAoB,GAAA,EAAqB7C,IAAA,SAAA8C,GAAA,WAA2B,OAAAjB,EAAA,OAAkBK,YAAA,SAAoB,CAAAT,EAAAiB,GAAA,6BAAqC4B,OAAA,MAAe,CAAAzC,EAAA,eAAAA,EAAA,UAAiCkB,IAAA,aAAAhB,MAAA,CAAwBwC,kBAAA,IAAqBC,MAAA,CAAQ9E,MAAA+B,EAAA,MAAAgD,SAAA,SAAAC,GAA2CjD,EAAAkD,MAAAD,GAAcE,WAAA,UAAqB,CAAA/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,SAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAA+CP,MAAA,CAAQ9E,MAAA+B,EAAA1B,OAAA,OAAA0E,SAAA,SAAAC,GAAmDjD,EAAAuD,KAAAvD,EAAA1B,OAAA,SAAA2E,IAAoCE,WAAA,mBAA6B/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,UAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAAgDP,MAAA,CAAQ9E,MAAA+B,EAAA1B,OAAA,QAAA0E,SAAA,SAAAC,GAAoDjD,EAAAuD,KAAAvD,EAAA1B,OAAA,UAAA2E,IAAqCE,WAAA,oBAA8B/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,SAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAA+CP,MAAA,CAAQ9E,MAAA+B,EAAA1B,OAAA,OAAA0E,SAAA,SAAAC,GAAmDjD,EAAAuD,KAAAvD,EAAA1B,OAAA,SAAA2E,IAAoCE,WAAA,mBAA6B/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,MAAAC,MAAA,CAAArD,EAAAqD,MAAAG,MAAsCT,MAAA,CAAQ9E,MAAA+B,EAAA1B,OAAA,IAAA0E,SAAA,SAAAC,GAAgDjD,EAAAuD,KAAAvD,EAAA1B,OAAA,MAAA2E,IAAiCE,WAAA,gBAA0B/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,UAAAK,QAAAzD,EAAAyD,QAAAC,SAAA,IAAsDX,MAAA,CAAQ9E,MAAA+B,EAAA1B,OAAA,QAAA0E,SAAA,SAAAC,GAAoDjD,EAAAuD,KAAAvD,EAAA1B,OAAA,UAAA2E,IAAqCE,WAAA,oBAA8B/C,EAAA,YAAAA,EAAA,YAAAA,EAAA,gBAAAA,EAAA,OAA6DK,YAAA,iBAA4B,CAAAL,EAAA,SAAcE,MAAA,CAAOE,KAAA,IAAUe,GAAA,CAAKK,MAAA5B,EAAA2D,eAA0B,CAAA3D,EAAAiB,GAAA,wBAAAb,EAAA,6BAAiEe,YAAAnB,EAAAoB,GAAA,EAAqB7C,IAAA,SAAA8C,GAAA,WAA2B,OAAAjB,EAAA,OAAkBK,YAAA,SAAoB,CAAAT,EAAAiB,GAAA,6BAAqC4B,OAAA,MAAe,CAAAzC,EAAA,eAAAA,EAAA,UAAiCkB,IAAA,UAAAhB,MAAA,CAAqBwC,kBAAA,IAAqBC,MAAA,CAAQ9E,MAAA+B,EAAA,MAAAgD,SAAA,SAAAC,GAA2CjD,EAAAkD,MAAAD,GAAcE,WAAA,UAAqB,CAAA/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,UAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAAgDP,MAAA,CAAQ9E,MAAA+B,EAAA4D,IAAA,QAAAZ,SAAA,SAAAC,GAAiDjD,EAAAuD,KAAAvD,EAAA4D,IAAA,UAAAX,IAAkCE,WAAA,iBAA2B/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,MAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAA4CP,MAAA,CAAQ9E,MAAA+B,EAAA4D,IAAA,SAAAZ,SAAA,SAAAC,GAAkDjD,EAAAuD,KAAAvD,EAAA4D,IAAA,WAAAX,IAAmCE,WAAA,mBAA4B,GAAA/C,EAAA,OAAgBK,YAAA,iBAA4B,CAAAL,EAAA,SAAcE,MAAA,CAAOE,KAAA,IAAUe,GAAA,CAAKK,MAAA5B,EAAA6D,WAAsB,CAAA7D,EAAAiB,GAAA,qBAAAb,EAAA,6BAA8De,YAAAnB,EAAAoB,GAAA,EAAqB7C,IAAA,SAAA8C,GAAA,WAA2B,OAAAjB,EAAA,OAAkBK,YAAA,SAAoB,CAAAT,EAAAiB,GAAA,gCAAwC4B,OAAA,MAAe,CAAAzC,EAAA,eAAAA,EAAA,UAAiCkB,IAAA,aAAAhB,MAAA,CAAwBwC,kBAAA,IAAqBC,MAAA,CAAQ9E,MAAA+B,EAAA,MAAAgD,SAAA,SAAAC,GAA2CjD,EAAAkD,MAAAD,GAAcE,WAAA,UAAqB,CAAA/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,UAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAAgDP,MAAA,CAAQ9E,MAAA+B,EAAA8D,OAAA,QAAAd,SAAA,SAAAC,GAAoDjD,EAAAuD,KAAAvD,EAAA8D,OAAA,UAAAb,IAAqCE,WAAA,oBAA8B/C,EAAA,gBAAqBK,YAAA,gBAAAH,MAAA,CAAmC8C,MAAA,MAAAC,MAAA,CAAArD,EAAAqD,MAAAC,YAA4CP,MAAA,CAAQ9E,MAAA+B,EAAA8D,OAAA,SAAAd,SAAA,SAAAC,GAAqDjD,EAAAuD,KAAAvD,EAAA8D,OAAA,WAAAb,IAAsCE,WAAA,sBAA+B,GAAA/C,EAAA,OAAgBK,YAAA,iBAA4B,CAAAL,EAAA,SAAcE,MAAA,CAAOE,KAAA,IAAUe,GAAA,CAAKK,MAAA5B,EAAA+D,cAAyB,CAAA/D,EAAAiB,GAAA,oCAAAb,EAAA,aAA6DK,YAAA,cAAwBL,EAAA,YAAiBE,MAAA,CAAOgC,IAAA,GAAAC,KAAA,KAAoB,CAAAnC,EAAA,UAAeE,MAAA,CAAO0D,IAAA,KAAU,CAAA5D,EAAA,OAAYK,YAAA,iBAA4B,CAAAT,EAAAiB,GAAA,qBAAAb,EAAA,UAA2CE,MAAA,CAAO2D,IAAA,KAAU,CAAA7D,EAAA,qBAAAA,EAAA,6BAA0De,YAAAnB,EAAAoB,GAAA,EAAqB7C,IAAA,SAAA8C,GAAA,WAA2B,OAAAjB,EAAA,OAAkBK,YAAA,SAAoB,CAAAT,EAAAiB,GAAA,aAAqB4B,OAAA,MAAe,CAAAzC,EAAA,eAAAA,EAAA,SAAgCkB,IAAA,UAAYlB,EAAA,OAAYK,YAAA,iBAA4B,CAAAL,EAAA,SAAcE,MAAA,CAAOE,KAAA,IAAUe,GAAA,CAAKK,MAAA5B,EAAAkE,cAAyB,CAAAlE,EAAAiB,GAAA,wBAAAb,EAAA,6BAAiEe,YAAAnB,EAAAoB,GAAA,EAAqB7C,IAAA,SAAA8C,GAAA,WAA2B,OAAAjB,EAAA,OAAkBK,YAAA,SAAoB,CAAAT,EAAAiB,GAAA,cAAsB4B,OAAA,MAAe,CAAAzC,EAAA,eAAAA,EAAA,UAAiCkB,IAAA,WAAalB,EAAA,OAAYK,YAAA,iBAA4B,CAAAL,EAAA,SAAcE,MAAA,CAAOE,KAAA,IAAUe,GAAA,CAAKK,MAAA5B,EAAAmE,eAA0B,CAAAnE,EAAAiB,GAAA,oCAAAb,EAAA,aAA6DK,YAAA,eAAwB,IACpoK2D,EAAe,GCDfC,aAAM,WAAgB,IAAArE,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,UAAoBE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,YAAiBE,MAAA,CAAOgC,IAAA,GAAAC,KAAA,KAAoB,CAAAnC,EAAA,UAAeE,MAAA,CAAOgE,IAAA,KAAU,CAAAlE,EAAA,iBAAsBE,MAAA,CAAOiE,WAAA,GAAkBhD,GAAA,CAAKO,OAAA9B,EAAAyB,QAAoBsB,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,OAAAxB,SAAA,SAAAC,GAAkDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,SAAAvB,IAAmCE,WAAA,iBAA4B,CAAA/C,EAAA,WAAgBE,MAAA,CAAO8C,MAAA,kBAAAnF,MAAA,WAA2CmC,EAAA,WAAgBE,MAAA,CAAO8C,MAAA,mBAAAnF,MAAA,mBAAoDmC,EAAA,WAAgBE,MAAA,CAAO8C,MAAA,mBAAAnF,MAAA,oBAAoD,OAAAmC,EAAA,UAAuBE,MAAA,CAAOgE,IAAA,KAAU,CAAAlE,EAAA,gBAAqBE,MAAA,CAAO8C,MAAA,aAAAM,SAAA,IAAmCX,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,KAAAxB,SAAA,SAAAC,GAAgDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,OAAAvB,IAAiCE,WAAA,gBAA0B/C,EAAA,gBAAqBE,MAAA,CAAO8C,MAAA,gBAAuBL,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,OAAAxB,SAAA,SAAAC,GAAkDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,SAAAvB,IAAmCE,WAAA,kBAA4B/C,EAAA,gBAAqBE,MAAA,CAAO8C,MAAA,uBAAA9D,KAAA,UAA+CyD,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,cAAAxB,SAAA,SAAAC,GAAyDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,gBAAAvB,IAA0CE,WAAA,0BAAmC,aAC/rCsB,EAAe,8OCwCnBC,EAAAC,EAAA7F,OAAA8F,QAEAC,EAAA,CACAC,MAAA,CACAC,oBAAA,CAAA1C,QAAA2C,EAAAC,GACAC,aAAA,CAAA7C,QAAA8C,EAAAF,GACAG,oBAAA,CAAA/C,QAAAgD,EAAAJ,GACAK,YAAA,CAAAjD,QAAAkD,EAAAN,GACAO,OAAA,CAAAnD,QAAA,KAEAoD,cAAA,CACAV,oBAAA,CAAA1C,QAAA2C,EAAAC,GACAC,aAAA,CAAA7C,QAAA8C,EAAAF,GACAG,oBAAA,CAAA/C,QAAAgD,EAAAJ,GACAK,YAAA,CAAAjD,QAAAkD,EAAAN,GACAS,oBAAA,CAAArD,QAAAsD,EAAAV,GACAO,OAAA,CAAAnD,QAAA,KAEAuD,cAAA,CACAb,oBAAA,CAAA1C,QAAA2C,EAAAC,GACAC,aAAA,CAAA7C,QAAA8C,EAAAF,GACAG,oBAAA,CAAA/C,QAAAgD,EAAAJ,GACAK,YAAA,CAAAjD,QAAAkD,EAAAN,GACAY,mBAAA,CAAAxD,QAAAyD,EAAAb,GACAc,8BAAA,CAAA1D,QAAA2D,EAAAf,GACAgB,oBAAA,CAAA5D,QAAA6D,EAAAjB,GACAO,OAAA,CAAAnD,QAAA,MAIA8D,EAAA,CACAhL,KAAA,kBACAqJ,MAAA,CACA/C,OAAA,QACAjE,KAAA,WACA4I,OAAA,MACAC,SAAA,KACAC,cAAA,OAGAC,QAAA,CACA9E,OAAA,eAAA+E,EAAA1K,OAAA2K,EAAA,KAAA3K,CAAA4K,mBAAAC,KAAA,SAAAC,EAAAtH,GAAA,OAAAoH,mBAAAnE,KAAA,SAAAsE,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAG,SAAAJ,MAAA,SAAAnF,EAAAwF,GAAA,OAAAT,EAAAlK,MAAA2D,KAAAiH,WAAA,OAAAzF,EAAA,GAOA0F,UAAA,WACA,IAAAC,EAAAnH,KAAAuE,MAAA/C,OACA4F,EAAAxC,EAAAuC,GAYA,OAXAC,EAAA,6EAAAC,OAEAF,EAFA,sEAAAE,OAIAF,EAJA,QAAAE,OAIAF,EAJA,8HAAAE,OAMArH,KAAAuE,MAAA8B,cANA,oFAAAgB,OAOArH,KAAAuE,MAAAhH,KAPA,QAAA8J,OAOArH,KAAAuE,MAAA4B,OAPA,gGAWAiB,GAEAE,QAAA,WACA,IAAAC,EAAA,CACAC,SAAA,WACA5C,QAAA5E,KAAAkH,YACAO,SAAA,CACAC,UAAA,CACAC,SAAA,EACAC,KAAA,KAEAC,gBAAA,CACAC,IAAA,CACAA,IAAA,UAKAC,EAAAC,KAAAC,MAAAxD,EAAA6C,QAAAY,IAAAX,KAEA,OADAvH,KAAAuE,MAAA6B,SAAA,KAAA2B,EAAAI,UAAA5C,OAAA,KAAA8B,OAAArH,KAAAuE,MAAA/C,SAAA4G,IAAAC,SAAA5J,OACA,CAAAQ,IAAA8I,EAAAI,UAAA5C,OAAA,KAAA8B,OAAArH,KAAAuE,MAAA/C,SAAAvC,IAAAqJ,OAAA,CAAApN,KAAA8E,KAAAuE,MAAA6B,cC3HsYmC,EAAA,2GCOtYC,EAAgB3M,OAAA4M,EAAA,KAAA5M,CACd0M,EACAnE,EACAI,GACF,EACA,KACA,KACA,MAIekE,EAAAF,EAAiB,QAUhCG,IAAiBH,EAAA,CAAaI,QAAA,KAAMC,QAAA,KAAMC,UAAA,KAAQC,SAAA,KAAOC,cAAA,KAAYC,aAAA,OC5BrE,IAAIC,EAAM,WAAgB,IAAAnJ,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,UAAoBE,MAAA,CAAOE,KAAA,KAAW,CAAAJ,EAAA,YAAiBE,MAAA,CAAOgC,IAAA,GAAAC,KAAA,KAAoB,CAAAnC,EAAA,UAAeE,MAAA,CAAOgE,IAAA,KAAU,CAAAlE,EAAA,iBAAsBE,MAAA,CAAOiE,WAAA,GAAkBhD,GAAA,CAAKO,OAAA9B,EAAAyB,QAAoBsB,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,OAAAxB,SAAA,SAAAC,GAAkDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,SAAAvB,IAAmCE,WAAA,iBAA4B,CAAA/C,EAAA,WAAgBE,MAAA,CAAO8C,MAAA,mBAAAnF,MAAA,YAA6CmC,EAAA,WAAgBE,MAAA,CAAO8C,MAAA,oBAAAnF,MAAA,oBAAsDmC,EAAA,WAAgBE,MAAA,CAAO8C,MAAA,oBAAAnF,MAAA,qBAAsD,OAAAmC,EAAA,UAAuBE,MAAA,CAAOgE,IAAA,KAAU,CAAAlE,EAAA,gBAAqBE,MAAA,CAAO8C,MAAA,aAAAM,SAAA,IAAmCX,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,KAAAxB,SAAA,SAAAC,GAAgDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,OAAAvB,IAAiCE,WAAA,gBAA0B/C,EAAA,gBAAqBE,MAAA,CAAO8C,MAAA,gBAAuBL,MAAA,CAAQ9E,MAAA+B,EAAAwE,MAAA,OAAAxB,SAAA,SAAAC,GAAkDjD,EAAAuD,KAAAvD,EAAAwE,MAAA,SAAAvB,IAAmCE,WAAA,mBAA4B,YAC5+BiG,EAAe,kTC0CnBC,GAAAvM,EAAA,QACAwM,GAAAD,GAAAvK,OAAA8F,QAEA2E,GAAA,CACAC,OAAA,CACAC,cAAA,CAAApH,QAAAqH,GAAAzE,GACA0E,sBAAA,CAAAtH,QAAAuH,GAAA3E,GACA4E,wBAAA,CAAAxH,QAAAyH,GAAA7E,GACA8E,sBAAA,CAAA1H,QAAA2H,GAAA/E,GACAF,oBAAA,CAAA1C,QAAA2C,EAAAC,GACAgF,oBAAA,CAAA5H,QAAA6H,EAAAjF,GACAkF,sBAAA,CAAA9H,QAAA+H,EAAAnF,GACAoF,4BAAA,CAAAhI,QAAAiI,EAAArF,GACAsF,2BAAA,CAAAlI,QAAAmI,GAAAvF,GACAwF,aAAA,CAAApI,QAAAqI,GAAAzF,GACA0F,uBAAA,CAAAtI,QAAAuI,GAAA3F,GACA4F,qBAAA,CAAAxI,QAAAyI,GAAA7F,GACAO,OAAA,CAAAnD,QAAA,KAEA0I,eAAA,CACAtB,cAAA,CAAApH,QAAAqH,GAAAzE,GACA0E,sBAAA,CAAAtH,QAAAuH,GAAA3E,GACA4E,wBAAA,CAAAxH,QAAAyH,GAAA7E,GACA8E,sBAAA,CAAA1H,QAAA2H,GAAA/E,GACAF,oBAAA,CAAA1C,QAAA2C,EAAAC,GACAgF,oBAAA,CAAA5H,QAAA6H,EAAAjF,GACAkF,sBAAA,CAAA9H,QAAA+H,EAAAnF,GACAoF,4BAAA,CAAAhI,QAAAiI,EAAArF,GACAsF,2BAAA,CAAAlI,QAAAmI,GAAAvF,GACAwF,aAAA,CAAApI,QAAAqI,GAAAzF,GACA0F,uBAAA,CAAAtI,QAAAuI,GAAA3F,GACA4F,qBAAA,CAAAxI,QAAAyI,GAAA7F,GACA+F,qBAAA,CAAA3I,QAAA4I,GAAAhG,GACAO,OAAA,CAAAnD,QAAA,KAEA6I,eAAA,CACAzB,cAAA,CAAApH,QAAAqH,GAAAzE,GACA0E,sBAAA,CAAAtH,QAAAuH,GAAA3E,GACA4E,wBAAA,CAAAxH,QAAAyH,GAAA7E,GACA8E,sBAAA,CAAA1H,QAAA2H,GAAA/E,GACAF,oBAAA,CAAA1C,QAAA2C,EAAAC,GACAgF,oBAAA,CAAA5H,QAAA6H,EAAAjF,GACAkF,sBAAA,CAAA9H,QAAA+H,EAAAnF,GACAoF,4BAAA,CAAAhI,QAAAiI,EAAArF,GACAsF,2BAAA,CAAAlI,QAAAmI,GAAAvF,GACAwF,aAAA,CAAApI,QAAAqI,GAAAzF,GACA0F,uBAAA,CAAAtI,QAAAuI,GAAA3F,GACA4F,qBAAA,CAAAxI,QAAAyI,GAAA7F,GACAY,mBAAA,CAAAxD,QAAAyD,EAAAb,GACAc,8BAAA,CAAA1D,QAAA2D,EAAAf,GACAkG,qBAAA,CAAA9I,QAAA+I,GAAAnG,GACAO,OAAA,CAAAnD,QAAA,MAIAgJ,GAAA,CACAlQ,KAAA,kBACAqJ,MAAA,CACA/C,OAAA,SACAjE,KAAA,WACA4I,OAAA,MACAC,SAAA,KACA2B,OAAA,QAGAzB,QAAA,CACA9E,OAAA,eAAA+E,EAAA1K,OAAA2K,EAAA,KAAA3K,CAAA4K,mBAAAC,KAAA,SAAAC,EAAAtH,GAAA,OAAAoH,mBAAAnE,KAAA,SAAAsE,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAG,SAAAJ,MAAA,SAAAnF,EAAAwF,GAAA,OAAAT,EAAAlK,MAAA2D,KAAAiH,WAAA,OAAAzF,EAAA,GAOA0F,UAAA,WACA,IAAAC,EAAAnH,KAAAuE,MAAA/C,OACA4F,EAAAkC,GAAAnC,GASA,OARAC,EAAA,6EAAAC,OAEAF,EAFA,kHAAAE,OAKAF,EALA,QAAAE,OAKAF,EALA,4FAAAE,OAMArH,KAAAuE,MAAAhH,KANA,QAAA8J,OAMArH,KAAAuE,MAAA4B,OANA,oBAQAiB,GAEAE,QAAA,WACA,IAAAC,EAAA,CACAC,SAAA,WACA5C,QAAA5E,KAAAkH,YACAO,SAAA,CACAC,UAAA,CACAC,SAAA,EACAC,KAAA,KAEAC,gBAAA,CACAC,IAAA,CACAA,IAAA,UAKAC,EAAAC,KAAAC,MAAAoB,GAAA/B,QAAAY,IAAAX,KAEA,OADAvH,KAAAuE,MAAA6B,SAAA,KAAA2B,EAAAI,UAAA5C,OAAA,KAAA8B,OAAArH,KAAAuE,MAAA/C,SAAA4G,IAAAC,SAAA5J,OACA,CAAAQ,IAAA8I,EAAAI,UAAA5C,OAAA,KAAA8B,OAAArH,KAAAuE,MAAA/C,SAAAvC,IAAAqJ,OAAA,CAAApN,KAAA8E,KAAAuE,MAAA6B,cCnJuYiF,GAAA,GCOnYC,GAAYzP,OAAA4M,EAAA,KAAA5M,CACdwP,GACAnC,EACAC,GACF,EACA,KACA,KACA,MAIeoC,GAAAD,GAAiB,QAUhC3C,IAAkB2C,GAAS,CAAG1C,QAAA,KAAMC,QAAA,KAAMC,UAAA,KAAQC,SAAA,KAAOC,cAAA,KAAYC,aAAA,OCyHrE,IAAAuC,GAAA,CACAC,WAAA,CACA5G,MAAA6D,EACAa,OAAAgC,IAEAG,MAAA,aACAxQ,KANA,WAOA,OACA+H,MAAA,KACAO,SAAA,EACAmI,QAAA,EACAnJ,OAAA,CACAC,QAAA,EACAC,SAAA,GAEArE,OAAA,CACAuN,OAAA,GACAC,QAAA,GACAC,OAAA,GACAC,IAAA,GACAC,QAAA,IAEArI,IAAA,CACAsI,SAAA,GACAD,QAAA,IAEAnI,OAAA,CACAoI,SAAA,GACAD,QAAA,IAEA5I,MAAA,CACAC,UAAA,SAAArF,GAAA,OAAAa,OAAAqN,OAAA7I,UAAArF,IAAA,mBACAuF,IAAA,SAAA4I,GAAA,OAAAA,EAAAzQ,QAAA,0BAIA0Q,QAAA,eAAAC,EAAArM,KACAsM,OACAtM,KAAA2L,QAAA,EACAW,KAAAC,IAAAvQ,KAAA,CACAwQ,GAAA3N,OAAAqN,OAAAO,QAAAzN,QACA9D,KAAA2D,OAAAqN,OAAAO,QAAAnG,QAAA5D,WAAAgK,aACA,SAAAC,EAAApQ,GACAoQ,IACApQ,EAAAsC,OAAAqN,OAAAI,KAAAC,IAAAtN,IAAA2N,iBAAA,sBAAArQ,GACA8P,EAAA7J,OAAAC,QAAA5D,OAAAqN,OAAAI,KAAAO,MAAAC,KAAAvQ,EAAA,IAAAwQ,WACAV,EAAA7J,OAAAE,SAAA7D,OAAAqN,OAAAI,KAAAO,MAAAC,KAAAvQ,EAAA,IAAAwQ,gBAKAzG,QAAA,CACA0G,gBAAA,SAAAR,EAAAtR,GACAoR,KAAAC,IAAA7J,SAAAhH,OAAA,GACA4Q,KAAAC,IAAAS,gBAAA,CACAC,KAAAX,KAAAC,IAAA7J,SAAA,GACA8J,KACAtR,QACA,SAAAyR,EAAApQ,GACA2Q,QAAAC,IAAAR,EAAApQ,MAMAmH,aAAA,WACA,GAAA1D,KAAAoN,MAAAC,WAAAC,YAAAtN,KAAA2L,OAAA,CACA,IAAAI,EAAAlN,OAAAqN,OAAAI,KAAAO,MAAAU,UAAAvN,KAAA3B,OAAA0N,KACA/L,KAAAgN,gBACAnO,OAAAqN,OAAAO,QAAAzN,QACAH,OAAAqN,OAAAO,QAAAnG,QAAAjI,OAAA,CAAA2B,KAAA3B,OAAAuN,OAAA5L,KAAA3B,OAAAwN,QAAA7L,KAAA3B,OAAAyN,QAAAC,GAAAW,eAIA9I,SAAA,WACA5D,KAAAoN,MAAAI,QAAAF,YAAAtN,KAAA2L,QACA3L,KAAAgN,gBACAnO,OAAAqN,OAAAO,QAAAzN,QACAH,OAAAqN,OAAAO,QAAAnG,QAAAmH,SAAAzN,KAAA2D,IAAAqI,QAAAhM,KAAA2D,IAAAsI,UAAAS,cAIA5I,YAAA,WACA9D,KAAAoN,MAAAM,WAAAJ,YAAAtN,KAAA2L,QACA3L,KAAAgN,gBACAnO,OAAAqN,OAAAO,QAAAzN,QACAH,OAAAqN,OAAAO,QAAAnG,QAAAqH,YAAA3N,KAAA6D,OAAAmI,QAAAhM,KAAA6D,OAAAoI,UAAAS,cAIAkB,OAAA,SAAArR,GACAyD,KAAAgN,gBACA,KACA,IAAAnO,OAAAqN,OAAAI,KAAAC,IAAAsB,SAAAtR,EAAA0C,KAAA2O,OAAArR,EAAA+L,QAAAoE,cAGAzI,YAAA,WACAjE,KAAA4N,OAAA5N,KAAAoN,MAAAU,MAAAxG,YAEApD,aAAA,WACAlE,KAAA4N,OAAA5N,KAAAoN,MAAAW,OAAAzG,cCzP8X0G,GAAA,0GCQ1XC,GAAYpS,OAAA4M,EAAA,KAAA5M,CACdmS,GACA9L,EACAiC,GACF,EACA,KACA,WACA,MAIe+J,GAAAD,GAAiB,QAchCtF,IAAkBsF,GAAS,CAAGE,QAAA,KAAKC,cAAA,KAAWC,YAAA,KAASC,mBAAA,KAAgBC,0BAAA,KAAuB1F,QAAA,KAAM2F,SAAA,KAAM1F,UAAA,KAAQ2F,QAAAC,GAAA,KAAQzF,aAAA,OCjC1H,IAAI0F,GAAK,CACP,CACE/N,MAAO,UACPwB,QAAO,oCAET,CACExB,MAAO,UACPwB,QAAO,yZAUT,CACExB,MAAO,SACPwB,QAAO,8QAKT,CACExB,MAAO,OACPwB,QAAO,8GAKIuM,MC/BXC,GAAK,CACP,CACEhO,MAAO,UACPwB,QAAO,yEAET,CACExB,MAAO,UACPwB,QAAO,itBAUT,CACExB,MAAO,SACPwB,QAAO,+bAKT,CACExB,MAAO,OACPwB,QAAO,iJAKIwM,MC0BfC,GAAA,CACAtR,KAAA,MACAkO,WAAA,CACAyC,SAEAhT,KALA,WAMA,OACA0F,MAAA,UACAkO,MAAA,CAAAC,GAAAC,GAAAC,GAAAC,IACAlN,SAAAgN,GACAxN,OAAA,KACAO,OAAA,6FAGAuE,QAAA,CACAzE,OAAA,SAAAL,GACAxB,KAAAgC,SAAAhC,KAAA8O,MAAAtN,MCzE2W2N,GAAA,8JCQvWC,GAAYvT,OAAA4M,EAAA,KAAA5M,CACdsT,GACArP,EACAmC,GACF,EACA,KACA,WACA,MAIeoN,GAAAD,GAAiB,QAkBhCzG,IAAkByG,GAAS,CAAGE,QAAA,KAAKnB,QAAA,KAAKvF,QAAA,KAAM2G,aAAAC,GAAA,KAAaC,YAAA,KAASC,WAAA,KAAQC,SAAA,KAAMC,SAAA,KAAMC,aAAA,KAAUC,eAAAC,GAAA,KAAeC,SAAA,KAAMvB,QAAAC,GAAA,KAAQuB,YAAA,KAASC,cAAAC,GAAA,wBCrCpIC,GAAM,WAAgB,IAAArQ,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,eAAAA,EAAA,MAAAJ,EAAAiB,GAAA,8BACrFqP,GAAe,GCAnBC,GAAA,GAKIC,GAAY1U,OAAA4M,EAAA,KAAA5M,CAChByU,GACEF,GACAC,IACF,EACA,KACA,KACA,MAIeG,GAAAD,GAAiB,QAKhC5H,IAAkB4H,GAAS,CAAGnC,cAAA,OCjB9B1O,OAAIC,IAAI8Q,SAEO,IAAAC,GAAA,IAAID,QAAO,CACxBvS,KAAM,UACNiJ,KAAMwJ,IACNC,OAAQ,CACN,CACEC,KAAM,IACNtT,KAAM,OACNiL,UAAW0F,IAEb,CACE2C,KAAM,SACNtT,KAAM,QACNiL,UAAWgI,oBChBjB9Q,OAAIC,IAAImR,SAEO,IAAAC,GAAA,IAAID,QAAKE,MAAM,CAC5BC,MAAO,GAGPC,UAAW,GAGXC,QAAS,kBCPTC,gBAAQ,GAAA/J,OAAIsJ,IAAJ,qBAA6C,CACnDU,MADmD,WAEjDnE,QAAQC,IACN,uGAIJmE,WAPmD,WAQjDpE,QAAQC,IAAI,wCAEdoE,OAVmD,WAWjDrE,QAAQC,IAAI,6CAEdqE,YAbmD,WAcjDtE,QAAQC,IAAI,gCAEdsE,QAhBmD,WAiBjDvE,QAAQC,IAAI,8CAEduE,QAnBmD,WAoBjDxE,QAAQC,IAAI,kEAEdwE,MAtBmD,SAsB5CA,GACLzE,QAAQyE,MAAM,4CAA6CA,MC5BjE,IAAMC,GAAOC,EAAQ,QACfvF,GAAO,IAAIsF,GAAKA,GAAKE,eAAiB,uBACtCC,GAAgBF,EAAQ,QAE9BhT,OAAOqN,OAAS,CACdI,KAAMA,GACNG,QAAS,IAAIH,GAAKC,IAAIsB,SAASkE,GAAc9S,IAAK8S,GAAc/S,SAChEqE,UAAW,SAAUrE,GACnB,OAAOsN,GAAKO,MAAMxJ,UAAUrE,KAIjBH,OAAf,OCJAa,OAAIsS,OAAOC,eAAgB,EAE3B,IAAIvS,OAAI,CACNgR,UACAK,SACAmB,OAAQ,SAAAC,GAAC,OAAIA,EAAE9C,OACd+C,OAAO,4BCdVlV,EAAAD,QAAA,0tCCAAC,EAAAD,QAAA,6sPCAA,IAAAoV,EAAAxV,EAAA,QAAAyV,EAAAzV,EAAA2B,EAAA6T,GAAghBC,EAAG,wBCAnhBpV,EAAAD,QAAA,oyBCAAC,EAAAD,QAAA,4cCAAC,EAAAD,QAAA,yjCCAAC,EAAAD,QAAA,+5DCAAC,EAAAD,QAAA,mxBCAAC,EAAAD,QAAA,8+BCAAC,EAAAD,QAAA,8+WCAA,IAAAsV,EAAA1V,EAAA,QAAA2V,EAAA3V,EAAA2B,EAAA+T,GAA0fC,EAAG,sBCA7ftV,EAAAD,QAAA,s/BCAAC,EAAAD,QAAA,0nFCAAC,EAAAD,QAAA,2mCCAAC,EAAAD,QAAA,4eCAAC,EAAAD,QAAA,ofCAAC,EAAAD,QAAA","file":"js/app.36cbe402.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC721.sol\\\";\\nimport \\\"../../access/roles/MinterRole.sol\\\";\\n\\n/**\\n * @title ERC721Mintable\\n * @dev ERC721 minting logic\\n */\\ncontract ERC721Mintable is ERC721, MinterRole {\\n    /**\\n     * @dev Function to mint tokens\\n     * @param to The address that will receive the minted tokens.\\n     * @param tokenId The token id to mint.\\n     * @return A boolean that indicates if the operation was successful.\\n     */\\n    function mint(address to, uint256 tokenId) public onlyMinter returns (bool) {\\n        _mint(to, tokenId);\\n        return true;\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title ERC165\\n * @author Matt Condon (@shrugs)\\n * @dev Implements ERC165 using a lookup table.\\n */\\ncontract ERC165 is IERC165 {\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n    /*\\n     * 0x01ffc9a7 ===\\n     *     bytes4(keccak256('supportsInterface(bytes4)'))\\n     */\\n\\n    /**\\n     * @dev a mapping of interface id to whether or not it's supported\\n     */\\n    mapping(bytes4 => bool) private _supportedInterfaces;\\n\\n    /**\\n     * @dev A contract implementing SupportsInterfaceWithLookup\\n     * implement ERC165 itself\\n     */\\n    constructor () internal {\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    /**\\n     * @dev implement supportsInterface(bytes4) using a lookup table\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    /**\\n     * @dev internal method for registering an interface\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal {\\n        require(interfaceId != 0xffffffff);\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\\n\"","module.exports = {\n  'address': '0x668Fadc48337Cb191332aB21fE6e3576E2E45294',\n  'abi': [\n    {\n      'constant': false,\n      'inputs': [],\n      'name': 'build',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'address'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_keySet',\n          'type': 'address[3]'\n        },\n        {\n          'name': '_uid',\n          'type': 'bytes32'\n        }\n      ],\n      'name': 'create',\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_keySet',\n          'type': 'address[3]'\n        },\n        {\n          'name': '_uid',\n          'type': 'bytes32'\n        }\n      ],\n      'name': 'issue',\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'newKey',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_issuer',\n          'type': 'address'\n        },\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'proxyAdd',\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_issuer',\n          'type': 'address'\n        },\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'proxyRemove',\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_user',\n          'type': 'address'\n        },\n        {\n          'name': '_msgPack',\n          'type': 'bytes'\n        }\n      ],\n      'name': 'register',\n      'outputs': [],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'updatePayment',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'constant': false,\n      'inputs': [\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'updateVerify',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'nonpayable',\n      'type': 'function'\n    },\n    {\n      'anonymous': false,\n      'inputs': [\n        {\n          'indexed': true,\n          'name': '_user',\n          'type': 'address'\n        },\n        {\n          'indexed': true,\n          'name': '_avatar',\n          'type': 'address'\n        },\n        {\n          'indexed': false,\n          'name': '_msgPack',\n          'type': 'bytes'\n        }\n      ],\n      'name': 'USER',\n      'type': 'event'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_uid',\n          'type': 'bytes32'\n        }\n      ],\n      'name': 'accountByUID',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'address'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [],\n      'name': 'accounts',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'uint256[2]'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_account',\n          'type': 'address'\n        }\n      ],\n      'name': 'isAccount',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_issuer',\n          'type': 'address'\n        }\n      ],\n      'name': 'isIssuer',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_issuer',\n          'type': 'address'\n        },\n        {\n          'name': '_account',\n          'type': 'address'\n        }\n      ],\n      'name': 'isMember',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_who',\n          'type': 'address'\n        }\n      ],\n      'name': 'isMember',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_account',\n          'type': 'address'\n        },\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'isPayment',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_issuer',\n          'type': 'address'\n        },\n        {\n          'name': '_proxy',\n          'type': 'address'\n        }\n      ],\n      'name': 'isProxy',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [\n        {\n          'name': '_account',\n          'type': 'address'\n        },\n        {\n          'name': '_key',\n          'type': 'address'\n        }\n      ],\n      'name': 'isVerify',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'bool'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    },\n    {\n      'constant': true,\n      'inputs': [],\n      'name': 'members',\n      'outputs': [\n        {\n          'name': '',\n          'type': 'uint256'\n        }\n      ],\n      'payable': false,\n      'stateMutability': 'view',\n      'type': 'function'\n    }\n  ]\n}\n","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC721Enumerable.sol\\\";\\nimport \\\"./ERC721.sol\\\";\\nimport \\\"../../introspection/ERC165.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token with optional enumeration extension logic\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ncontract ERC721Enumerable is ERC165, ERC721, IERC721Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => uint256[]) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\\n    /*\\n     * 0x780e9d63 ===\\n     *     bytes4(keccak256('totalSupply()')) ^\\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) ^\\n     *     bytes4(keccak256('tokenByIndex(uint256)'))\\n     */\\n\\n    /**\\n     * @dev Constructor function\\n     */\\n    constructor () public {\\n        // register the supported interface to conform to ERC721Enumerable via ERC165\\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\\n    }\\n\\n    /**\\n     * @dev Gets the token ID at a given index of the tokens list of the requested owner\\n     * @param owner address owning the tokens list to be accessed\\n     * @param index uint256 representing the index to be accessed of the requested tokens list\\n     * @return uint256 token ID at the given index of the tokens list owned by the requested address\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256) {\\n        require(index < balanceOf(owner));\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev Gets the total amount of tokens stored by the contract\\n     * @return uint256 representing the total amount of tokens\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev Gets the token ID at a given index of all the tokens in this contract\\n     * Reverts if the index is greater or equal to the total number of tokens\\n     * @param index uint256 representing the index to be accessed of the tokens list\\n     * @return uint256 token ID at the given index of the tokens list\\n     */\\n    function tokenByIndex(uint256 index) public view returns (uint256) {\\n        require(index < totalSupply());\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Internal function to transfer ownership of a given token ID to another address.\\n     * As opposed to transferFrom, this imposes no restrictions on msg.sender.\\n     * @param from current owner of the token\\n     * @param to address to receive the ownership of the given token ID\\n     * @param tokenId uint256 ID of the token to be transferred\\n     */\\n    function _transferFrom(address from, address to, uint256 tokenId) internal {\\n        super._transferFrom(from, to, tokenId);\\n\\n        _removeTokenFromOwnerEnumeration(from, tokenId);\\n\\n        _addTokenToOwnerEnumeration(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to mint a new token\\n     * Reverts if the given token ID already exists\\n     * @param to address the beneficiary that will own the minted token\\n     * @param tokenId uint256 ID of the token to be minted\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        super._mint(to, tokenId);\\n\\n        _addTokenToOwnerEnumeration(to, tokenId);\\n\\n        _addTokenToAllTokensEnumeration(tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to burn a specific token\\n     * Reverts if the token does not exist\\n     * Deprecated, use _burn(uint256) instead\\n     * @param owner owner of the token to burn\\n     * @param tokenId uint256 ID of the token being burned\\n     */\\n    function _burn(address owner, uint256 tokenId) internal {\\n        super._burn(owner, tokenId);\\n\\n        _removeTokenFromOwnerEnumeration(owner, tokenId);\\n        // Since tokenId will be deleted, we can clear its slot in _ownedTokensIndex to trigger a gas refund\\n        _ownedTokensIndex[tokenId] = 0;\\n\\n        _removeTokenFromAllTokensEnumeration(tokenId);\\n    }\\n\\n    /**\\n     * @dev Gets the list of token IDs of the requested owner\\n     * @param owner address owning the tokens\\n     * @return uint256[] List of token IDs owned by the requested address\\n     */\\n    function _tokensOfOwner(address owner) internal view returns (uint256[] storage) {\\n        return _ownedTokens[owner];\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        _ownedTokensIndex[tokenId] = _ownedTokens[to].length;\\n        _ownedTokens[to].push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the _ownedTokensIndex mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _ownedTokens[from].length.sub(1);\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        _ownedTokens[from].length--;\\n\\n        // Note that _ownedTokensIndex[tokenId] hasn't been cleared: it still points to the old slot (now occupied by\\n        // lastTokenId, or just over the end of the array if the token was the last one).\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length.sub(1);\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        _allTokens.length--;\\n        _allTokensIndex[tokenId] = 0;\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"../math/SafeMath.sol\\\";\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids\\n *\\n * Include with `using Counters for Counters.Counter;`\\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\\n * directly accessed.\\n */\\nlibrary Counters {\\n    using SafeMath for uint256;\\n\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        counter._value += 1;\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        counter._value = counter._value.sub(1);\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ncontract IERC721Enumerable is IERC721 {\\n    function totalSupply() public view returns (uint256);\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256 tokenId);\\n\\n    function tokenByIndex(uint256 index) public view returns (uint256);\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @title ERC721 Non-Fungible Token Standard basic interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-721\\n */\\ncontract IERC721 is IERC165 {\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    function balanceOf(address owner) public view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) public view returns (address owner);\\n\\n    function approve(address to, uint256 tokenId) public;\\n    function getApproved(uint256 tokenId) public view returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool _approved) public;\\n    function isApprovedForAll(address owner, address operator) public view returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId) public;\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public;\\n\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public;\\n}\\n\"","import Vue from 'vue'\nimport Vuetify from 'vuetify/lib'\nimport 'vuetify/src/stylus/app.styl'\n\nVue.use(Vuetify, {\n  iconfont: 'md',\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"dark\":\"\"}},[_c('v-toolbar',{attrs:{\"app\":\"\",\"flat\":\"\"}},[_c('v-toolbar-title',{staticClass:\"headline text-uppercase\",domProps:{\"innerHTML\":_vm._s(_vm.title)}}),_c('v-spacer'),_c('v-btn',{attrs:{\"flat\":\"\",\"icon\":\"\",\"href\":\"https://github.com/Nitro888/DaoAuth\",\"target\":\"_blank\"}},[_c('v-icon',[_vm._v(\"fab fa-github\")])],1),_c('v-menu',{attrs:{\"offset-y\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"flat\":\"\",\"icon\":\"\"}},on),[_vm._v(\"\\n          \"+_vm._s(_vm.select)+\"\\n        \")])]}}])},[_c('v-list',_vm._l((_vm.items),function(item,key){return _c('v-list-tile',{key:key,on:{\"click\":function($event){return _vm.change(key)}}},[_c('v-list-tile-title',[_vm._v(_vm._s(key))])],1)}),1)],1)],1),_c('v-footer',{attrs:{\"app\":\"\",\"height\":\"auto\"}},[_c('v-card',{staticClass:\"flex site-footer\",attrs:{\"flat\":\"\"}},[_c('v-card-actions',{staticClass:\"justify-center\",domProps:{\"innerHTML\":_vm._s(_vm.footer)}})],1)],1),_c('v-content',[_c('Home',{attrs:{\"contents\":_vm.contents}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_vm._l((_vm.contents),function(item,index){return _c('div',{key:index},[_c('h1',{staticClass:\"white--text font-weight-medium mb-2 display-1 text-xs-center\",domProps:{\"innerHTML\":_vm._s(item.title)}}),_c('v-container',{staticClass:\"subheading mb-5 text-xs-center nanum-gothic\",domProps:{\"innerHTML\":_vm._s(item.content)}})],1)}),_c('v-divider',{staticClass:\"mb-3 mt-3\"}),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"md4\":\"\"}},[_c('div',{staticClass:\"headline\"},[_vm._v(\"Issuer Account\")]),_c('div',{staticClass:\"subheading mb-3\"},[_vm._v(_vm._s(_vm.member.issuers)+\"/\"+_vm._s(_vm.member.accounts))])]),_c('v-flex',{attrs:{\"md8\":\"\"}},[_c('v-expansion-panel',[_c('v-expansion-panel-content',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"Create Issuer Account\")])]},proxy:true}])},[_c('v-container',[_c('v-form',{ref:\"formCreate\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"Master\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.create.master),callback:function ($$v) {_vm.$set(_vm.create, \"master\", $$v)},expression:\"create.master\"}}),_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"Payment\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.create.payment),callback:function ($$v) {_vm.$set(_vm.create, \"payment\", $$v)},expression:\"create.payment\"}}),_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"Verify\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.create.verify),callback:function ($$v) {_vm.$set(_vm.create, \"verify\", $$v)},expression:\"create.verify\"}}),_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"UID\",\"rules\":[_vm.rules.min]},model:{value:(_vm.create.uid),callback:function ($$v) {_vm.$set(_vm.create, \"uid\", $$v)},expression:\"create.uid\"}}),_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"Account\",\"loading\":_vm.loading,\"readonly\":\"\"},model:{value:(_vm.create.account),callback:function ($$v) {_vm.$set(_vm.create, \"account\", $$v)},expression:\"create.account\"}}),_c('v-spacer'),_c('v-spacer'),_c('v-spacer')],1),_c('div',{staticClass:\"text-xs-right\"},[_c('v-btn',{attrs:{\"flat\":\"\"},on:{\"click\":_vm.createIssuer}},[_vm._v(\"Create\")])],1)],1)],1),_c('v-expansion-panel-content',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"Add Issuer Proxy Keys\")])]},proxy:true}])},[_c('v-container',[_c('v-form',{ref:\"formAdd\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"Account\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.add.account),callback:function ($$v) {_vm.$set(_vm.add, \"account\", $$v)},expression:\"add.account\"}}),_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"UID\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.add.proxyKey),callback:function ($$v) {_vm.$set(_vm.add, \"proxyKey\", $$v)},expression:\"add.proxyKey\"}})],1),_c('div',{staticClass:\"text-xs-right\"},[_c('v-btn',{attrs:{\"flat\":\"\"},on:{\"click\":_vm.addProxy}},[_vm._v(\"Add\")])],1)],1)],1),_c('v-expansion-panel-content',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"Remove Issuer Proxy Keys\")])]},proxy:true}])},[_c('v-container',[_c('v-form',{ref:\"formRemove\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"Account\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.remove.account),callback:function ($$v) {_vm.$set(_vm.remove, \"account\", $$v)},expression:\"remove.account\"}}),_c('v-text-field',{staticClass:\"address-small\",attrs:{\"label\":\"UID\",\"rules\":[_vm.rules.isAddress]},model:{value:(_vm.remove.proxyKey),callback:function ($$v) {_vm.$set(_vm.remove, \"proxyKey\", $$v)},expression:\"remove.proxyKey\"}})],1),_c('div',{staticClass:\"text-xs-right\"},[_c('v-btn',{attrs:{\"flat\":\"\"},on:{\"click\":_vm.removeProxy}},[_vm._v(\"Remove\")])],1)],1)],1)],1)],1)],1),_c('v-divider',{staticClass:\"mb-3 mt-3\"}),_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"lg4\":\"\"}},[_c('div',{staticClass:\"headline mb-3\"},[_vm._v(\"Token Factory\")])]),_c('v-flex',{attrs:{\"lg8\":\"\"}},[_c('v-expansion-panel',[_c('v-expansion-panel-content',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"ERC20\")])]},proxy:true}])},[_c('v-container',[_c('ERC20',{ref:\"erc20\"}),_c('div',{staticClass:\"text-xs-right\"},[_c('v-btn',{attrs:{\"flat\":\"\"},on:{\"click\":_vm.createErc20}},[_vm._v(\"Create\")])],1)],1)],1),_c('v-expansion-panel-content',{scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('div',{staticClass:\"title\"},[_vm._v(\"ERC721\")])]},proxy:true}])},[_c('v-container',[_c('ERC721',{ref:\"erc721\"}),_c('div',{staticClass:\"text-xs-right\"},[_c('v-btn',{attrs:{\"flat\":\"\"},on:{\"click\":_vm.createErc721}},[_vm._v(\"Create\")])],1)],1)],1)],1)],1)],1),_c('v-divider',{staticClass:\"mb-3 mt-3\"})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('v-radio-group',{attrs:{\"mandatory\":false},on:{\"change\":_vm.select},model:{value:(_vm.token.select),callback:function ($$v) {_vm.$set(_vm.token, \"select\", $$v)},expression:\"token.select\"}},[_c('v-radio',{attrs:{\"label\":\"ERC20 (default)\",\"value\":\"ERC20\"}}),_c('v-radio',{attrs:{\"label\":\"ERC20 (burnable)\",\"value\":\"ERC20Burnable\"}}),_c('v-radio',{attrs:{\"label\":\"ERC20 (mintable)\",\"value\":\"ERC20Mintable\"}})],1)],1),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Token Name\",\"readonly\":\"\"},model:{value:(_vm.token.name),callback:function ($$v) {_vm.$set(_vm.token, \"name\", $$v)},expression:\"token.name\"}}),_c('v-text-field',{attrs:{\"label\":\"Token Symbol\"},model:{value:(_vm.token.symbol),callback:function ($$v) {_vm.$set(_vm.token, \"symbol\", $$v)},expression:\"token.symbol\"}}),_c('v-text-field',{attrs:{\"label\":\"Token Initial Supply\",\"type\":\"number\"},model:{value:(_vm.token.initialSupply),callback:function ($$v) {_vm.$set(_vm.token, \"initialSupply\", $$v)},expression:\"token.initialSupply\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card flat>\n    <v-layout row wrap>\n      <v-flex xs6>\n        <v-radio-group v-model=\"token.select\" :mandatory=\"false\" @change=\"select\">\n          <v-radio label=\"ERC20 (default)\" value=\"ERC20\"></v-radio>\n          <v-radio label=\"ERC20 (burnable)\" value=\"ERC20Burnable\"></v-radio>\n          <v-radio label=\"ERC20 (mintable)\" value=\"ERC20Mintable\"></v-radio>\n        </v-radio-group>\n      </v-flex>\n      <v-flex xs6>\n        <v-text-field\n          v-model=\"token.name\"\n          label=\"Token Name\"\n          readonly\n        ></v-text-field>\n        <v-text-field\n          v-model=\"token.symbol\"\n          label=\"Token Symbol\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"token.initialSupply\"\n          label=\"Token Initial Supply\"\n          type=\"number\"\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n  </v-card>\n</template>\n\n<script>\n  import SafeMath from '!raw-loader!@/blockchain/openzeppelin-solidity/math/SafeMath.sol'\n  import Roles from '!raw-loader!@/blockchain/openzeppelin-solidity/access/Roles.sol'\n  import MinterRole from '!raw-loader!@/blockchain/openzeppelin-solidity/access/roles/MinterRole.sol'\n  import IERC20 from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC20/IERC20.sol'\n  import ERC20 from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC20/ERC20.sol'\n  import ERC20Detailed from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC20/ERC20Detailed.sol'\n  import ERC20Burnable from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC20/ERC20Burnable.sol'\n  import ERC20Mintable from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC20/ERC20Mintable.sol'\n\n  import * as wrapper from 'solc/wrapper'\n  const solc = wrapper(window.Module)\n\n  const sources = {\n    ERC20: {\n      'math/SafeMath.sol': {content: SafeMath},\n      'IERC20.sol': {content: IERC20},\n      'ERC20Detailed.sol': {content: ERC20Detailed},\n      'ERC20.sol': {content: ERC20},\n      'Deploy': {content: ''}\n    },\n    ERC20Burnable: {\n      'math/SafeMath.sol': {content: SafeMath},\n      'IERC20.sol': {content: IERC20},\n      'ERC20Detailed.sol': {content: ERC20Detailed},\n      'ERC20.sol': {content: ERC20},\n      'ERC20Burnable.sol': {content: ERC20Burnable},\n      'Deploy': {content: ''}\n    },\n    ERC20Mintable: {\n      'math/SafeMath.sol': {content: SafeMath},\n      'IERC20.sol': {content: IERC20},\n      'ERC20Detailed.sol': {content: ERC20Detailed},\n      'ERC20.sol': {content: ERC20},\n      'access/Roles.sol': {content: Roles},\n      'access/roles/MinterRole.sol': {content: MinterRole},\n      'ERC20Mintable.sol': {content: ERC20Mintable},\n      'Deploy': {content: ''}\n    }\n  }\n\nexport default {\n  data: () => ({\n    token: {\n      select: 'ERC20',\n      name: 'My Token',\n      symbol: 'XMT',\n      byteCode: null,\n      initialSupply: 10000000\n    },\n  }),\n  methods: {\n    select: async function (type) {\n      /*\n      this.token.byteCode = null\n      await this.compile(type, this.token.name, this.token.symbol)\n      this.estimateGas()\n      */\n    },\n    customize: function () {\n      let base = this.token.select // base = [ERC20, ERC20Burnable, ERC20Mintable]\n      let temp = sources[base]\n      temp['Deploy']['content'] = `\n        pragma solidity ^0.5.2;\n        import \"./${base}.sol\";\n        import \"./ERC20Detailed.sol\";\n        contract My${base} is ${base}, ERC20Detailed {\n            uint8 public constant DECIMALS = 18;\n            uint256 public constant INITIAL_SUPPLY = ${this.token.initialSupply} * (10 ** uint256(DECIMALS));\n            constructor () public ERC20Detailed(\"${this.token.name}\", \"${this.token.symbol}\", DECIMALS) {\n                _mint(msg.sender, INITIAL_SUPPLY);\n            }\n        }`\n      return temp\n    },\n    compile: function () {\n      let myCustomContract = {\n        language: 'Solidity',\n        sources: this.customize(),\n        settings: {\n          optimizer: {\n            enabled: true,\n            runs: 200\n          },\n          outputSelection: {\n            '*': {\n              '*': [ '*' ]\n            }\n          }\n        }\n      }\n      let output = JSON.parse(solc.compile(JSON.stringify(myCustomContract)))\n      this.token.byteCode = '0x' + output.contracts.Deploy[`My${this.token.select}`].evm.bytecode.object\n      return {abi: output.contracts.Deploy[`My${this.token.select}`].abi, option: {data: this.token.byteCode}}\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ERC20Factory.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ERC20Factory.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ERC20Factory.vue?vue&type=template&id=4f701e4e&\"\nimport script from \"./ERC20Factory.vue?vue&type=script&lang=js&\"\nexport * from \"./ERC20Factory.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/JetLim/GitHub/DaoAuth/daoauth/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VRadio } from 'vuetify/lib'\nimport { VRadioGroup } from 'vuetify/lib'\nimport { VTextField } from 'vuetify/lib'\ninstallComponents(component, {VCard,VFlex,VLayout,VRadio,VRadioGroup,VTextField})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('v-radio-group',{attrs:{\"mandatory\":false},on:{\"change\":_vm.select},model:{value:(_vm.token.select),callback:function ($$v) {_vm.$set(_vm.token, \"select\", $$v)},expression:\"token.select\"}},[_c('v-radio',{attrs:{\"label\":\"ERC721 (default)\",\"value\":\"ERC721\"}}),_c('v-radio',{attrs:{\"label\":\"ERC721 (burnable)\",\"value\":\"ERC721Burnable\"}}),_c('v-radio',{attrs:{\"label\":\"ERC721 (mintable)\",\"value\":\"ERC721Mintable\"}})],1)],1),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Token Name\",\"readonly\":\"\"},model:{value:(_vm.token.name),callback:function ($$v) {_vm.$set(_vm.token, \"name\", $$v)},expression:\"token.name\"}}),_c('v-text-field',{attrs:{\"label\":\"Token Symbol\"},model:{value:(_vm.token.symbol),callback:function ($$v) {_vm.$set(_vm.token, \"symbol\", $$v)},expression:\"token.symbol\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card flat>\n    <v-layout row wrap>\n      <v-flex xs6>\n        <v-radio-group v-model=\"token.select\" :mandatory=\"false\" @change=\"select\">\n          <v-radio label=\"ERC721 (default)\" value=\"ERC721\"></v-radio>\n          <v-radio label=\"ERC721 (burnable)\" value=\"ERC721Burnable\"></v-radio>\n          <v-radio label=\"ERC721 (mintable)\" value=\"ERC721Mintable\"></v-radio>\n        </v-radio-group>\n      </v-flex>\n      <v-flex xs6>\n        <v-text-field\n          v-model=\"token.name\"\n          label=\"Token Name\"\n          readonly\n        ></v-text-field>\n        <v-text-field\n          v-model=\"token.symbol\"\n          label=\"Token Symbol\"\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n  </v-card>\n</template>\n\n<script>\n  import SafeMath from '!raw-loader!@/blockchain/openzeppelin-solidity/math/SafeMath.sol'\n  import Roles from '!raw-loader!@/blockchain/openzeppelin-solidity/access/Roles.sol'\n  import MinterRole from '!raw-loader!@/blockchain/openzeppelin-solidity/access/roles/MinterRole.sol'\n  import Address from '!raw-loader!@/blockchain/openzeppelin-solidity/utils/Address.sol'\n  import Counters from '!raw-loader!@/blockchain/openzeppelin-solidity/drafts/Counters.sol'\n  import IERC165 from '!raw-loader!@/blockchain/openzeppelin-solidity/introspection/IERC165.sol'\n  import ERC165 from '!raw-loader!@/blockchain/openzeppelin-solidity/introspection/ERC165.sol'\n  import IERC721 from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/IERC721.sol'\n  import IERC721Receiver from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/IERC721Receiver.sol'\n  import IERC721Enumerable from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/IERC721Enumerable.sol'\n  import IERC721Metadata from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/IERC721Metadata.sol'\n  import ERC721 from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/ERC721.sol'\n  import ERC721Enumerable from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/ERC721Enumerable.sol'\n  import ERC721Metadata from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/ERC721Metadata.sol'\n  import ERC721Burnable from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/ERC721Burnable.sol'\n  import ERC721Mintable from '!raw-loader!@/blockchain/openzeppelin-solidity/token/ERC721/ERC721Mintable.sol'\n\n  let wrapper = require('solc/wrapper')\n  const solc = wrapper(window.Module)\n\n  const sources = {\n    ERC721: {\n      'IERC721.sol': {content: IERC721},\n      'IERC721Receiver.sol': {content: IERC721Receiver},\n      'IERC721Enumerable.sol': {content: IERC721Enumerable},\n      'IERC721Metadata.sol': {content: IERC721Metadata},\n      'math/SafeMath.sol': {content: SafeMath},\n      'utils/Address.sol': {content: Address},\n      'drafts/Counters.sol': {content: Counters},\n      'introspection/IERC165.sol': {content: IERC165},\n      'introspection/ERC165.sol': {content: ERC165},\n      'ERC721.sol': {content: ERC721},\n      'ERC721Enumerable.sol': {content: ERC721Enumerable},\n      'ERC721Metadata.sol': {content: ERC721Metadata},\n      'Deploy': {content: ''}\n    },\n    ERC721Burnable: {\n      'IERC721.sol': {content: IERC721},\n      'IERC721Receiver.sol': {content: IERC721Receiver},\n      'IERC721Enumerable.sol': {content: IERC721Enumerable},\n      'IERC721Metadata.sol': {content: IERC721Metadata},\n      'math/SafeMath.sol': {content: SafeMath},\n      'utils/Address.sol': {content: Address},\n      'drafts/Counters.sol': {content: Counters},\n      'introspection/IERC165.sol': {content: IERC165},\n      'introspection/ERC165.sol': {content: ERC165},\n      'ERC721.sol': {content: ERC721},\n      'ERC721Enumerable.sol': {content: ERC721Enumerable},\n      'ERC721Metadata.sol': {content: ERC721Metadata},\n      'ERC721Burnable.sol': {content: ERC721Burnable},\n      'Deploy': {content: ''}\n    },\n    ERC721Mintable: {\n      'IERC721.sol': {content: IERC721},\n      'IERC721Receiver.sol': {content: IERC721Receiver},\n      'IERC721Enumerable.sol': {content: IERC721Enumerable},\n      'IERC721Metadata.sol': {content: IERC721Metadata},\n      'math/SafeMath.sol': {content: SafeMath},\n      'utils/Address.sol': {content: Address},\n      'drafts/Counters.sol': {content: Counters},\n      'introspection/IERC165.sol': {content: IERC165},\n      'introspection/ERC165.sol': {content: ERC165},\n      'ERC721.sol': {content: ERC721},\n      'ERC721Enumerable.sol': {content: ERC721Enumerable},\n      'ERC721Metadata.sol': {content: ERC721Metadata},\n      'access/Roles.sol': {content: Roles},\n      'access/roles/MinterRole.sol': {content: MinterRole},\n      'ERC721Mintable.sol': {content: ERC721Mintable},\n      'Deploy': {content: ''}\n    }\n  }\n\nexport default {\n  data: () => ({\n    token: {\n      select: 'ERC721',\n      name: 'My Token',\n      symbol: 'XMT',\n      byteCode: null,\n      output: null\n    },\n  }),\n  methods: {\n    select: async function (type) {\n      /*\n      this.token.byteCode = null\n      await this.compile(type, this.token.name, this.token.symbol)\n      this.estimateGas()\n      */\n    },\n    customize: function () {\n      let base = this.token.select // base = [ERC721, ERC721Burnable, ERC721Mintable]\n      let temp = sources[base]\n      temp['Deploy']['content'] = `\n        pragma solidity ^0.5.2;\n        import './${base}.sol';\n        import \"./ERC721Enumerable.sol\";\n        import \"./ERC721Metadata.sol\";\n        contract My${base} is ${base}, ERC721Enumerable, ERC721Metadata {\n            constructor () public ERC721Metadata(\"${this.token.name}\", \"${this.token.symbol}\") {}\n        }`\n      return temp\n    },\n    compile: function () {\n      let myCustomContract = {\n        language: 'Solidity',\n        sources: this.customize(),\n        settings: {\n          optimizer: {\n            enabled: true,\n            runs: 200\n          },\n          outputSelection: {\n            '*': {\n              '*': [ '*' ]\n            }\n          }\n        }\n      }\n      let output = JSON.parse(solc.compile(JSON.stringify(myCustomContract)))\n      this.token.byteCode = '0x' + output.contracts.Deploy[`My${this.token.select}`].evm.bytecode.object\n      return {abi: output.contracts.Deploy[`My${this.token.select}`].abi, option: {data: this.token.byteCode}}\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ERC721Factory.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ERC721Factory.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ERC721Factory.vue?vue&type=template&id=038e2cf8&\"\nimport script from \"./ERC721Factory.vue?vue&type=script&lang=js&\"\nexport * from \"./ERC721Factory.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/JetLim/GitHub/DaoAuth/daoauth/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VRadio } from 'vuetify/lib'\nimport { VRadioGroup } from 'vuetify/lib'\nimport { VTextField } from 'vuetify/lib'\ninstallComponents(component, {VCard,VFlex,VLayout,VRadio,VRadioGroup,VTextField})\n","<template>\n  <v-container>\n    <div v-for=\"(item, index) in contents\" v-bind:key=\"index\">\n      <h1 class=\"white--text font-weight-medium mb-2 display-1 text-xs-center\" v-html=\"item.title\"/>\n      <v-container class=\"subheading mb-5 text-xs-center nanum-gothic\" v-html=\"item.content\"/>\n    </div>\n    <v-divider class=\"mb-3 mt-3\"/>\n    <v-layout row wrap>\n      <v-flex md4>\n        <div class=\"headline\">Issuer Account</div>\n        <div class=\"subheading mb-3\">{{member.issuers}}/{{member.accounts}}</div>\n      </v-flex>\n      <v-flex md8>\n        <v-expansion-panel>\n          <v-expansion-panel-content>\n            <template v-slot:header>\n              <div class=\"title\">Create Issuer Account</div>\n            </template>\n            <v-container>\n              <v-form ref=\"formCreate\" v-model=\"valid\" lazy-validation>\n                <v-text-field\n                  label=\"Master\"\n                  v-model=\"create.master\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"Payment\"\n                  v-model=\"create.payment\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"Verify\"\n                  v-model=\"create.verify\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"UID\"\n                  v-model=\"create.uid\"\n                  class=\"address-small\"\n                  :rules=\"[rules.min]\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"Account\"\n                  v-model=\"create.account\"\n                  class=\"address-small\"\n                  :loading=\"loading\"\n                  readonly\n                ></v-text-field>\n                <v-spacer/><v-spacer/><v-spacer/>\n              </v-form>\n              <div class=\"text-xs-right\">\n                <v-btn flat @click=\"createIssuer\">Create</v-btn>        \n              </div>\n            </v-container>\n          </v-expansion-panel-content>\n          <v-expansion-panel-content>\n            <template v-slot:header>\n              <div class=\"title\">Add Issuer Proxy Keys</div>\n            </template>\n            <v-container>\n              <v-form ref=\"formAdd\" v-model=\"valid\" lazy-validation>\n                <v-text-field\n                  label=\"Account\"\n                  v-model=\"add.account\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"UID\"\n                  v-model=\"add.proxyKey\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n              </v-form>\n              <div class=\"text-xs-right\">\n                <v-btn flat @click=\"addProxy\">Add</v-btn>        \n              </div>\n            </v-container>\n          </v-expansion-panel-content>\n          <v-expansion-panel-content>\n            <template v-slot:header>\n              <div class=\"title\">Remove Issuer Proxy Keys</div>\n            </template>\n            <v-container>\n              <v-form ref=\"formRemove\" v-model=\"valid\" lazy-validation>\n                <v-text-field\n                  label=\"Account\"\n                  v-model=\"remove.account\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n                <v-text-field\n                  label=\"UID\"\n                  v-model=\"remove.proxyKey\"\n                  class=\"address-small\"\n                  :rules=\"[rules.isAddress]\"\n                ></v-text-field>\n              </v-form>\n              <div class=\"text-xs-right\">\n                <v-btn flat @click=\"removeProxy\">Remove</v-btn>        \n              </div>\n            </v-container>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-flex>\n    </v-layout>\n    <v-divider class=\"mb-3 mt-3\"/>\n    <v-layout row wrap>\n      <v-flex lg4>\n        <div class=\"headline mb-3\">Token Factory</div>\n      </v-flex>\n      <v-flex lg8>\n        <v-expansion-panel>\n          <v-expansion-panel-content>\n            <template v-slot:header>\n              <div class=\"title\">ERC20</div>\n            </template>\n            <v-container>\n              <ERC20 ref=\"erc20\"/>\n              <div class=\"text-xs-right\">\n                <v-btn flat @click=\"createErc20\">Create</v-btn>\n              </div>\n            </v-container>\n          </v-expansion-panel-content>\n          <v-expansion-panel-content>\n            <template v-slot:header>\n              <div class=\"title\">ERC721</div>\n            </template>\n            <v-container>\n              <ERC721 ref=\"erc721\"/>\n              <div class=\"text-xs-right\">\n                <v-btn flat @click=\"createErc721\">Create</v-btn>\n              </div>\n            </v-container>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-flex>\n    </v-layout>\n    <v-divider class=\"mb-3 mt-3\"/>\n  </v-container>\n</template>\n\n<script>\n  import ERC20 from '@/components/ERC20Factory.vue'\n  import ERC721 from '@/components/ERC721Factory.vue'\n\n  export default {\n    components: {\n      ERC20,\n      ERC721\n    },\n    props: ['contents'],\n    data () {\n      return {\n        valid: null,\n        loading: false,\n        enable: false,\n        member: {\n          issuers: 0,\n          accounts: 0\n        },\n        create: {\n          master: '',\n          payment: '',\n          verify: '',\n          uid: '',\n          account: ''\n        },\n        add: {\n          proxyKey: '',\n          account: ''\n        },\n        remove: {\n          proxyKey: '',\n          account: ''\n        },\n        rules: {\n          isAddress: value => window.wallet.isAddress(value) || 'Is not address.',\n          min: v => v.length >= 4 || 'Min 4 characters',\n        }\n      }\n    },\n    mounted: function () {\n      if(web3) {\n        this.enable = true\n        web3.eth.call({\n          to: window.wallet.daoAuth.address,\n          data: window.wallet.daoAuth.methods.accounts().encodeABI()\n        }, (err, result) => {\n          if (!err) {\n            result = window.wallet.web3.eth.abi.decodeParameters([\"uint256\", \"uint256\"], result)\n            this.member.issuers = window.wallet.web3.utils.toBN(result[0]).toString()\n            this.member.accounts = window.wallet.web3.utils.toBN(result[1]).toString()\n          }\n        })\n      }\n    },\n    methods: {\n      sendTransaction: function (to, data) {\n        if (web3.eth.accounts.length>0) {\n          web3.eth.sendTransaction({\n            from: web3.eth.accounts[0],\n            to,\n            data\n          }, (err, result) => {\n            console.log(err,result)\n          })\n        } else {\n          // error\n        }\n      },\n      createIssuer: function () {\n        if (this.$refs.formCreate.validate() && this.enable) {\n          let uid = window.wallet.web3.utils.keccak256(this.create.uid)\n          this.sendTransaction(\n            window.wallet.daoAuth.address,\n            window.wallet.daoAuth.methods.create([this.create.master, this.create.payment, this.create.verify], uid).encodeABI()\n          )\n        }\n      },\n      addProxy: function () {\n        if (this.$refs.formAdd.validate() && this.enable) {\n          this.sendTransaction(\n            window.wallet.daoAuth.address,\n            window.wallet.daoAuth.methods.proxyAdd(this.add.account, this.add.proxyKey).encodeABI()\n          )\n        }\n      },\n      removeProxy: function () {\n        if (this.$refs.formRemove.validate() && this.enable) {\n          this.sendTransaction(\n            window.wallet.daoAuth.address,\n            window.wallet.daoAuth.methods.proxyRemove(this.remove.account, this.remove.proxyKey).encodeABI()\n          )\n        }\n      },\n      deploy: function (result) {\n        this.sendTransaction(\n          null,\n          (new window.wallet.web3.eth.Contract(result.abi)).deploy(result.option).encodeABI()\n        )\n      },\n      createErc20: function () {\n        this.deploy(this.$refs.erc20.compile())\n      },\n      createErc721: function () {\n        this.deploy(this.$refs.erc721.compile())\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .address {\n    font-family: 'Roboto Mono', monospace;\n  }\n  .address-small {\n    font-family: 'Roboto Mono', monospace;\n    font-size: 0.9em;\n  }\n  .nanum-gothic {\n    font-family: 'Nanum Gothic', sans-serif;\n  }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=2f9d86b6&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=2f9d86b6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f9d86b6\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/JetLim/GitHub/DaoAuth/daoauth/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VContainer } from 'vuetify/lib'\nimport { VDivider } from 'vuetify/lib'\nimport { VExpansionPanel } from 'vuetify/lib'\nimport { VExpansionPanelContent } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VForm } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VTextField } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VContainer,VDivider,VExpansionPanel,VExpansionPanelContent,VFlex,VForm,VLayout,VSpacer,VTextField})\n","let ko = [\n  {\n    title: 'DaoAuth',\n    content: `DaoAuth는 블록체인을 이용한 탈중앙 인증 수단입니다.`\n  },\n  {\n    title: 'Account',\n    content: `\n    <strong>공개주소를 이용한 지갑은</strong><br/><br/>\n      프라이빗키 유출에 따른 대응이 불가능하며,<br/>\n      타인에게 양도할 경우, 상호 신뢰의 문제가 있으며,<br/>\n      키를 변경하여 주소가 변경되었을 경우 새주소로 자산의 이전이 불가능하다는 단점등이 있습니다.<br/><br/>\n    <strong>DaoAuth에 의해 만들어진 어카운트는</strong><br/><br/>\n      사용자 암호를 바꾸듯이 사용자가 언제든지 키를 바꿀 수 있으며,<br/>\n      따라서 양도 문제에 있어서도 신뢰의 문제가 사라지게 됩니다.<br/>\n      키를 변경하더라도 주소는 변경이 되지 않기 때문에, 자산이전에 대해 고민할 필요가 없습니다.<br/>`\n  },\n  {\n    title: 'Issuer',\n    content: `어카운트를 직접 DaoAuth에서 생성한 사용자를 인증자라고 부릅니다.<br/>\n    인증자들은 사용자들의 요청을 받아 어카운트를 생성해 줄 수 있으며,<br/>\n    이때 인증자는 어카운트를 생성해주는 댓가로 e-mail, 전화번호, 그외 기타 <strong>KYC & AML</strong>에 필요한 정보를 요청할 수 있습니다.<br/>\n    그래서 높은 수준 정보를 요구하는 인증자들이 생성한 어카운트는 거래에 있어서 상대방에게 높은 신뢰를 얻을 수 있습니다.`\n  },\n  {\n    title: 'User',\n    content: `어카운트를 인증자를 통해 생성한 이용자들을 사용자라고 부릅니다.<br/>\n    그리고 이 어카운트를 이용해 DaoAuth를 지원하는 각종 서비스에 바로 가입하여 이용할 수 있게 됩니다.`\n  }\n]\n\nexport default ko\n","let en = [\n  {\n    title: 'DaoAuth',\n    content: `DaoAuth is a decentralized authentication method using a block chain.`\n  },\n  {\n    title: 'Account',\n    content: `\n    <strong>Wallet with public address</strong><br/><br/>\n      is not possible to respond to leakage of the private key,<br/>\n      When transferring to another person, there is a problem of mutual trust,<br/>\n      The disadvantage is that if the address is changed by changing the key, the asset can not be transferred to the new address.<br/><br/>\n    <strong>An account created by DaoAuth</strong><br/><br/>\n      As users change their passwords, users can change their keys at any time, <br/>\n      So, even with transfer issues, the problem of trust disappears. <br/>\n      You do not have to worry about transferring assets because you can not change the address even if you change the key.<br/><br/>`\n  },\n  {\n    title: 'Issuer',\n    content: `The user who created the account directly from DaoAuth is called the Issuer.<br/>\n    Issuers can generate accounts at the request of users. <br/>\n    At this time, the issuer can ask for information on e-mail, telephone number, and other <strong>KYC & AML</strong> in return for creating an account. <br/>\n    This means that accounts created by issuer who require high-level information can gain a high degree of trust in the transaction.`\n  },\n  {\n    title: 'User',\n    content: `Who create accounts through an issuer are called users. <br/>\n    You will then be able to sign up for DaoAuth services using this account.`\n  }\n]\n\nexport default en\n","<template>\n  <v-app dark>\n    <v-toolbar app flat>\n      <v-toolbar-title class=\"headline text-uppercase\" v-html=\"title\"/>\n      <v-spacer></v-spacer>\n      <v-btn\n        flat\n        icon\n        href=\"https://github.com/Nitro888/DaoAuth\"\n        target=\"_blank\"\n      >\n        <v-icon>fab fa-github</v-icon>\n      </v-btn>\n      <v-menu offset-y>\n        <template v-slot:activator=\"{ on }\">\n          <v-btn\n            flat\n            icon\n            v-on=\"on\"\n          >\n            {{select}}\n          </v-btn>\n        </template>\n        <v-list>\n          <v-list-tile\n            v-for=\"(item, key) in items\"\n            :key=\"key\"\n            @click=\"change(key)\"\n          >\n            <v-list-tile-title>{{ key }}</v-list-tile-title>\n          </v-list-tile>\n        </v-list>\n      </v-menu>\n    </v-toolbar>\n    <v-footer\n      app\n      height=\"auto\"\n    >\n      <v-card\n        class=\"flex site-footer\"\n        flat\n      >    \n        <v-card-actions class=\"justify-center\" v-html=\"footer\"/>\n      </v-card>\n    </v-footer>\n    \n    <v-content>\n      <Home v-bind:contents=\"contents\"/>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nimport Home from './views/Home'\nimport KO from '@/document/ko.js'\nimport EN from '@/document/en.js'\n\nexport default {\n  name: 'App',\n  components: {\n    Home\n  },\n  data () {\n    return {\n      title: 'DaoAuth',\n      items: {KO, EN},\n      contents: KO,\n      select: 'KO',\n      footer: '&copy;2018<span class=\"ml-1 mr-1 font-weight-black\">·</span><strong>daoauth.com</strong>',\n    }\n  },\n  methods: {\n    change: function (select) {\n      this.contents = this.items[select]\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .site-footer {\n    font-family: 'Titillium Web', sans-serif;\n  }\n</style>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=220a5264&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=220a5264&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"220a5264\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/JetLim/GitHub/DaoAuth/daoauth/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib'\nimport { VBtn } from 'vuetify/lib'\nimport { VCard } from 'vuetify/lib'\nimport { VCardActions } from 'vuetify/lib'\nimport { VContent } from 'vuetify/lib'\nimport { VFooter } from 'vuetify/lib'\nimport { VIcon } from 'vuetify/lib'\nimport { VList } from 'vuetify/lib'\nimport { VListTile } from 'vuetify/lib'\nimport { VListTileTitle } from 'vuetify/lib'\nimport { VMenu } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VToolbar } from 'vuetify/lib'\nimport { VToolbarTitle } from 'vuetify/lib'\ninstallComponents(component, {VApp,VBtn,VCard,VCardActions,VContent,VFooter,VIcon,VList,VListTile,VListTileTitle,VMenu,VSpacer,VToolbar,VToolbarTitle})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('h1',[_vm._v(\"This is an about page\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=1fa047fe&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/Users/JetLim/GitHub/DaoAuth/daoauth/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib'\ninstallComponents(component, {VContainer})\n","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\nimport About from './views/About.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home\n    },\n    {\n      path: '/about',\n      name: 'about',\n      component: About\n    }\n  ]\n})\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n\n  },\n  mutations: {\n\n  },\n  actions: {\n\n  }\n})\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","const Web3 = require('web3')\nconst web3 = new Web3(Web3.givenProvider || 'ws://localhost:8546')\nconst jsonInterface = require('./daoAuth.js')\n\nwindow.wallet = {\n  web3: web3,\n  daoAuth: new web3.eth.Contract(jsonInterface.abi, jsonInterface.address),\n  isAddress: function (address) {\n    return web3.utils.isAddress(address)\n  }\n}\n\nexport default window.wallet\n","import Vue from 'vue'\nimport './plugins/vuetify'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport './registerServiceWorker'\nimport './blockchain/ethereum'\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n","module.exports = \"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ncontract IERC721Receiver {\\n    /**\\n     * @notice Handle the receipt of an NFT\\n     * @dev The ERC721 smart contract calls this function on the recipient\\n     * after a `safeTransfer`. This function MUST return the function selector,\\n     * otherwise the caller will revert the transaction. The selector to be\\n     * returned can be obtained as `this.onERC721Received.selector`. This\\n     * function MAY throw to revert and reject the transfer.\\n     * Note: the ERC721 contract address is always the message sender.\\n     * @param operator The address which called `safeTransferFrom` function\\n     * @param from The address which previously owned the token\\n     * @param tokenId The NFT identifier which is being transferred\\n     * @param data Additional data with no specified format\\n     * @return bytes4 `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\n     */\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data)\\n    public returns (bytes4);\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://eips.ethereum.org/EIPS/eip-20\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return An uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token to a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when _allowed[msg.sender][spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\\n\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=2f9d86b6&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=2f9d86b6&scoped=true&lang=css&\"","module.exports = \"pragma solidity ^0.5.2;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface IERC20 {\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address who) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ncontract IERC721Metadata is IERC721 {\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @title ERC20Detailed token\\n * @dev The decimals are only for visualization purposes.\\n * All the operations are done using the smallest and indivisible token unit,\\n * just as on Ethereum all the operations are done in wei.\\n */\\ncontract ERC20Detailed is IERC20 {\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\\n        _name = name;\\n        _symbol = symbol;\\n        _decimals = decimals;\\n    }\\n\\n    /**\\n     * @return the name of the token.\\n     */\\n    function name() public view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @return the symbol of the token.\\n     */\\n    function symbol() public view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @return the number of decimals of the token.\\n     */\\n    function decimals() public view returns (uint8) {\\n        return _decimals;\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\n/**\\n * @title SafeMath\\n * @dev Unsigned math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Multiplies two unsigned integers, reverts on overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Adds two unsigned integers, reverts on overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a);\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0);\\n        return a % b;\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @title Burnable Token\\n * @dev Token that can be irreversibly burned (destroyed).\\n */\\ncontract ERC20Burnable is ERC20 {\\n    /**\\n     * @dev Burns a specific amount of tokens.\\n     * @param value The amount of token to be burned.\\n     */\\n    function burn(uint256 value) public {\\n        _burn(msg.sender, value);\\n    }\\n\\n    /**\\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\\n     * @param from address The account whose tokens will be burned.\\n     * @param value uint256 The amount of token to be burned.\\n     */\\n    function burnFrom(address from, uint256 value) public {\\n        _burnFrom(from, value);\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"../Roles.sol\\\";\\n\\ncontract MinterRole {\\n    using Roles for Roles.Role;\\n\\n    event MinterAdded(address indexed account);\\n    event MinterRemoved(address indexed account);\\n\\n    Roles.Role private _minters;\\n\\n    constructor () internal {\\n        _addMinter(msg.sender);\\n    }\\n\\n    modifier onlyMinter() {\\n        require(isMinter(msg.sender));\\n        _;\\n    }\\n\\n    function isMinter(address account) public view returns (bool) {\\n        return _minters.has(account);\\n    }\\n\\n    function addMinter(address account) public onlyMinter {\\n        _addMinter(account);\\n    }\\n\\n    function renounceMinter() public {\\n        _removeMinter(msg.sender);\\n    }\\n\\n    function _addMinter(address account) internal {\\n        _minters.add(account);\\n        emit MinterAdded(account);\\n    }\\n\\n    function _removeMinter(address account) internal {\\n        _minters.remove(account);\\n        emit MinterRemoved(account);\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../drafts/Counters.sol\\\";\\nimport \\\"../../introspection/ERC165.sol\\\";\\n\\n/**\\n * @title ERC721 Non-Fungible Token Standard basic implementation\\n * @dev see https://eips.ethereum.org/EIPS/eip-721\\n */\\ncontract ERC721 is ERC165, IERC721 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n    using Counters for Counters.Counter;\\n\\n    // Equals to `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    // Mapping from token ID to owner\\n    mapping (uint256 => address) private _tokenOwner;\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to number of owned token\\n    mapping (address => Counters.Counter) private _ownedTokensCount;\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\\n\\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\\n    /*\\n     * 0x80ac58cd ===\\n     *     bytes4(keccak256('balanceOf(address)')) ^\\n     *     bytes4(keccak256('ownerOf(uint256)')) ^\\n     *     bytes4(keccak256('approve(address,uint256)')) ^\\n     *     bytes4(keccak256('getApproved(uint256)')) ^\\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) ^\\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) ^\\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) ^\\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) ^\\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)'))\\n     */\\n\\n    constructor () public {\\n        // register the supported interfaces to conform to ERC721 via ERC165\\n        _registerInterface(_INTERFACE_ID_ERC721);\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address\\n     * @param owner address to query the balance of\\n     * @return uint256 representing the amount owned by the passed address\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        require(owner != address(0));\\n        return _ownedTokensCount[owner].current();\\n    }\\n\\n    /**\\n     * @dev Gets the owner of the specified token ID\\n     * @param tokenId uint256 ID of the token to query the owner of\\n     * @return address currently marked as the owner of the given token ID\\n     */\\n    function ownerOf(uint256 tokenId) public view returns (address) {\\n        address owner = _tokenOwner[tokenId];\\n        require(owner != address(0));\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Approves another address to transfer the given token ID\\n     * The zero address indicates there is no approved address.\\n     * There can only be one approved address per token at a given time.\\n     * Can only be called by the token owner or an approved operator.\\n     * @param to address to be approved for the given token ID\\n     * @param tokenId uint256 ID of the token to be approved\\n     */\\n    function approve(address to, uint256 tokenId) public {\\n        address owner = ownerOf(tokenId);\\n        require(to != owner);\\n        require(msg.sender == owner || isApprovedForAll(owner, msg.sender));\\n\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(owner, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Gets the approved address for a token ID, or zero if no address set\\n     * Reverts if the token ID does not exist.\\n     * @param tokenId uint256 ID of the token to query the approval of\\n     * @return address currently approved for the given token ID\\n     */\\n    function getApproved(uint256 tokenId) public view returns (address) {\\n        require(_exists(tokenId));\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Sets or unsets the approval of a given operator\\n     * An operator is allowed to transfer all tokens of the sender on their behalf\\n     * @param to operator address to set the approval\\n     * @param approved representing the status of the approval to be set\\n     */\\n    function setApprovalForAll(address to, bool approved) public {\\n        require(to != msg.sender);\\n        _operatorApprovals[msg.sender][to] = approved;\\n        emit ApprovalForAll(msg.sender, to, approved);\\n    }\\n\\n    /**\\n     * @dev Tells whether an operator is approved by a given owner\\n     * @param owner owner address which you want to query the approval of\\n     * @param operator operator address which you want to query the approval of\\n     * @return bool whether the given operator is approved by the given owner\\n     */\\n    function isApprovedForAll(address owner, address operator) public view returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev Transfers the ownership of a given token ID to another address\\n     * Usage of this method is discouraged, use `safeTransferFrom` whenever possible\\n     * Requires the msg.sender to be the owner, approved, or operator\\n     * @param from current owner of the token\\n     * @param to address to receive the ownership of the given token ID\\n     * @param tokenId uint256 ID of the token to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public {\\n        require(_isApprovedOrOwner(msg.sender, tokenId));\\n\\n        _transferFrom(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Safely transfers the ownership of a given token ID to another address\\n     * If the target address is a contract, it must implement `onERC721Received`,\\n     * which is called upon a safe transfer, and return the magic value\\n     * `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise,\\n     * the transfer is reverted.\\n     * Requires the msg.sender to be the owner, approved, or operator\\n     * @param from current owner of the token\\n     * @param to address to receive the ownership of the given token ID\\n     * @param tokenId uint256 ID of the token to be transferred\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Safely transfers the ownership of a given token ID to another address\\n     * If the target address is a contract, it must implement `onERC721Received`,\\n     * which is called upon a safe transfer, and return the magic value\\n     * `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise,\\n     * the transfer is reverted.\\n     * Requires the msg.sender to be the owner, approved, or operator\\n     * @param from current owner of the token\\n     * @param to address to receive the ownership of the given token ID\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes data to send along with a safe transfer check\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public {\\n        transferFrom(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data));\\n    }\\n\\n    /**\\n     * @dev Returns whether the specified token exists\\n     * @param tokenId uint256 ID of the token to query the existence of\\n     * @return bool whether the token exists\\n     */\\n    function _exists(uint256 tokenId) internal view returns (bool) {\\n        address owner = _tokenOwner[tokenId];\\n        return owner != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether the given spender can transfer a given token ID\\n     * @param spender address of the spender to query\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @return bool whether the msg.sender is approved for the given token ID,\\n     * is an operator of the owner, or is the owner of the token\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\\n        address owner = ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Internal function to mint a new token\\n     * Reverts if the given token ID already exists\\n     * @param to The address that will own the minted token\\n     * @param tokenId uint256 ID of the token to be minted\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        require(to != address(0));\\n        require(!_exists(tokenId));\\n\\n        _tokenOwner[tokenId] = to;\\n        _ownedTokensCount[to].increment();\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to burn a specific token\\n     * Reverts if the token does not exist\\n     * Deprecated, use _burn(uint256) instead.\\n     * @param owner owner of the token to burn\\n     * @param tokenId uint256 ID of the token being burned\\n     */\\n    function _burn(address owner, uint256 tokenId) internal {\\n        require(ownerOf(tokenId) == owner);\\n\\n        _clearApproval(tokenId);\\n\\n        _ownedTokensCount[owner].decrement();\\n        _tokenOwner[tokenId] = address(0);\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to burn a specific token\\n     * Reverts if the token does not exist\\n     * @param tokenId uint256 ID of the token being burned\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        _burn(ownerOf(tokenId), tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to transfer ownership of a given token ID to another address.\\n     * As opposed to transferFrom, this imposes no restrictions on msg.sender.\\n     * @param from current owner of the token\\n     * @param to address to receive the ownership of the given token ID\\n     * @param tokenId uint256 ID of the token to be transferred\\n     */\\n    function _transferFrom(address from, address to, uint256 tokenId) internal {\\n        require(ownerOf(tokenId) == from);\\n        require(to != address(0));\\n\\n        _clearApproval(tokenId);\\n\\n        _ownedTokensCount[from].decrement();\\n        _ownedTokensCount[to].increment();\\n\\n        _tokenOwner[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke `onERC721Received` on a target address\\n     * The call is not executed if the target address is not a contract\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        if (!to.isContract()) {\\n            return true;\\n        }\\n\\n        bytes4 retval = IERC721Receiver(to).onERC721Received(msg.sender, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /**\\n     * @dev Private function to clear current approval of a given token ID\\n     * @param tokenId uint256 ID of the token to be transferred\\n     */\\n    function _clearApproval(uint256 tokenId) private {\\n        if (_tokenApprovals[tokenId] != address(0)) {\\n            _tokenApprovals[tokenId] = address(0);\\n        }\\n    }\\n}\\n\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=220a5264&scoped=true&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=220a5264&scoped=true&lang=css&\"","module.exports = \"pragma solidity ^0.5.2;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping (address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev give an account access to this role\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(!has(role, account));\\n\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev remove an account's access to this role\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(account != address(0));\\n        require(has(role, account));\\n\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev check if an account has this role\\n     * @return bool\\n     */\\n    function has(Role storage role, address account) internal view returns (bool) {\\n        require(account != address(0));\\n        return role.bearer[account];\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC721.sol\\\";\\nimport \\\"./IERC721Metadata.sol\\\";\\nimport \\\"../../introspection/ERC165.sol\\\";\\n\\ncontract ERC721Metadata is ERC165, ERC721, IERC721Metadata {\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\\n    /*\\n     * 0x5b5e139f ===\\n     *     bytes4(keccak256('name()')) ^\\n     *     bytes4(keccak256('symbol()')) ^\\n     *     bytes4(keccak256('tokenURI(uint256)'))\\n     */\\n\\n    /**\\n     * @dev Constructor function\\n     */\\n    constructor (string memory name, string memory symbol) public {\\n        _name = name;\\n        _symbol = symbol;\\n\\n        // register the supported interfaces to conform to ERC721 via ERC165\\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\\n    }\\n\\n    /**\\n     * @dev Gets the token name\\n     * @return string representing the token name\\n     */\\n    function name() external view returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Gets the token symbol\\n     * @return string representing the token symbol\\n     */\\n    function symbol() external view returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns an URI for a given token ID\\n     * Throws if the token ID does not exist. May return an empty string.\\n     * @param tokenId uint256 ID of the token to query\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\\n        require(_exists(tokenId));\\n        return _tokenURIs[tokenId];\\n    }\\n\\n    /**\\n     * @dev Internal function to set the token URI for a given token\\n     * Reverts if the token ID does not exist\\n     * @param tokenId uint256 ID of the token to set its URI\\n     * @param uri string URI to assign\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory uri) internal {\\n        require(_exists(tokenId));\\n        _tokenURIs[tokenId] = uri;\\n    }\\n\\n    /**\\n     * @dev Internal function to burn a specific token\\n     * Reverts if the token does not exist\\n     * Deprecated, use _burn(uint256) instead\\n     * @param owner owner of the token to burn\\n     * @param tokenId uint256 ID of the token being burned by the msg.sender\\n     */\\n    function _burn(address owner, uint256 tokenId) internal {\\n        super._burn(owner, tokenId);\\n\\n        // Clear metadata (if any)\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\n/**\\n * Utility library of inline functions on addresses\\n */\\nlibrary Address {\\n    /**\\n     * Returns whether the target address is a contract\\n     * @dev This function will return false if invoked during the constructor of a contract,\\n     * as the code is not actually created until after the constructor finishes.\\n     * @param account address of the account to check\\n     * @return whether the target address is a contract\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 size;\\n        // XXX Currently there is no better way to check if there is a contract in an address\\n        // than to check the size of the code at that address.\\n        // See https://ethereum.stackexchange.com/a/14016/36603\\n        // for more details about how this works.\\n        // TODO Check this again before the Serenity release, because all addresses will be\\n        // contracts then.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC721.sol\\\";\\n\\n/**\\n * @title ERC721 Burnable Token\\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\\n */\\ncontract ERC721Burnable is ERC721 {\\n    /**\\n     * @dev Burns a specific ERC721 token.\\n     * @param tokenId uint256 id of the ERC721 token to be burned.\\n     */\\n    function burn(uint256 tokenId) public {\\n        require(_isApprovedOrOwner(msg.sender, tokenId));\\n        _burn(tokenId);\\n    }\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\n/**\\n * @title IERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice Query if a contract implements an interface\\n     * @param interfaceId The interface identifier, as specified in ERC-165\\n     * @dev Interface identification is specified in ERC-165. This function\\n     * uses less than 30,000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"","module.exports = \"pragma solidity ^0.5.2;\\n\\nimport \\\"./ERC20.sol\\\";\\nimport \\\"../../access/roles/MinterRole.sol\\\";\\n\\n/**\\n * @title ERC20Mintable\\n * @dev ERC20 minting logic\\n */\\ncontract ERC20Mintable is ERC20, MinterRole {\\n    /**\\n     * @dev Function to mint tokens\\n     * @param to The address that will receive the minted tokens.\\n     * @param value The amount of tokens to mint.\\n     * @return A boolean that indicates if the operation was successful.\\n     */\\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\\n        _mint(to, value);\\n        return true;\\n    }\\n}\\n\""],"sourceRoot":""}